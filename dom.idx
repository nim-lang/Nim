nimTitle	dom	dom.html	module std/dom		0
nim	DomApiVersion	dom.html#DomApiVersion	const DomApiVersion		48
nim	EventTarget	dom.html#EventTarget	type EventTarget		51
nim	DomEvent	dom.html#DomEvent	enum DomEvent		77
nim	PerformanceMemory	dom.html#PerformanceMemory	type PerformanceMemory		110
nim	PerformanceTiming	dom.html#PerformanceTiming	type PerformanceTiming		115
nim	Performance	dom.html#Performance	type Performance		137
nim	Range	dom.html#Range	type Range		141
nim	Selection	dom.html#Selection	type Selection		150
nim	Storage	dom.html#Storage	type Storage		160
nim	Window	dom.html#Window	type Window		162
nim	Frame	dom.html#Frame	type Frame		191
nim	ClassList	dom.html#ClassList	type ClassList		193
nim	ElementNode	dom.html#ElementNode	NodeType.ElementNode		195
nim	AttributeNode	dom.html#AttributeNode	NodeType.AttributeNode		195
nim	TextNode	dom.html#TextNode	NodeType.TextNode		195
nim	CDATANode	dom.html#CDATANode	NodeType.CDATANode		195
nim	EntityRefNode	dom.html#EntityRefNode	NodeType.EntityRefNode		195
nim	EntityNode	dom.html#EntityNode	NodeType.EntityNode		195
nim	ProcessingInstructionNode	dom.html#ProcessingInstructionNode	NodeType.ProcessingInstructionNode		195
nim	CommentNode	dom.html#CommentNode	NodeType.CommentNode		195
nim	DocumentNode	dom.html#DocumentNode	NodeType.DocumentNode		195
nim	DocumentTypeNode	dom.html#DocumentTypeNode	NodeType.DocumentTypeNode		195
nim	DocumentFragmentNode	dom.html#DocumentFragmentNode	NodeType.DocumentFragmentNode		195
nim	NotationNode	dom.html#NotationNode	NodeType.NotationNode		195
nim	NodeType	dom.html#NodeType	enum NodeType		195
nim	Node	dom.html#Node	type Node		209
nim	Document	dom.html#Document	type Document		233
nim	Element	dom.html#Element	type Element		260
nim	ValidityState	dom.html#ValidityState	type ValidityState		281
nim	Blob	dom.html#Blob	type Blob		294
nim	File	dom.html#File	type File		298
nim	TextAreaElement	dom.html#TextAreaElement	type TextAreaElement		302
nim	InputElement	dom.html#InputElement	type InputElement		308
nim	LinkElement	dom.html#LinkElement	type LinkElement		360
nim	EmbedElement	dom.html#EmbedElement	type EmbedElement		366
nim	AnchorElement	dom.html#AnchorElement	type AnchorElement		374
nim	OptionElement	dom.html#OptionElement	type OptionElement		378
nim	FormElement	dom.html#FormElement	type FormElement		385
nim	ImageElement	dom.html#ImageElement	type ImageElement		397
nim	Style	dom.html#Style	type Style		407
nim	None	dom.html#None	EventPhase.None		777
nim	CapturingPhase	dom.html#CapturingPhase	EventPhase.CapturingPhase		777
nim	AtTarget	dom.html#AtTarget	EventPhase.AtTarget		777
nim	BubblingPhase	dom.html#BubblingPhase	EventPhase.BubblingPhase		777
nim	EventPhase	dom.html#EventPhase	enum EventPhase		777
nim	Event	dom.html#Event	type Event		783
nim	UIEvent	dom.html#UIEvent	type UIEvent		795
nim	KeyboardEvent	dom.html#KeyboardEvent	type KeyboardEvent		799
nim	KeyboardEventKey	dom.html#KeyboardEventKey	enum KeyboardEventKey		807
nim	NoButton	dom.html#NoButton	MouseButtons.NoButton		1153
nim	PrimaryButton	dom.html#PrimaryButton	MouseButtons.PrimaryButton		1153
nim	SecondaryButton	dom.html#SecondaryButton	MouseButtons.SecondaryButton		1153
nim	AuxilaryButton	dom.html#AuxilaryButton	MouseButtons.AuxilaryButton		1153
nim	FourthButton	dom.html#FourthButton	MouseButtons.FourthButton		1153
nim	FifthButton	dom.html#FifthButton	MouseButtons.FifthButton		1153
nim	MouseButtons	dom.html#MouseButtons	enum MouseButtons		1153
nim	MouseEvent	dom.html#MouseEvent	type MouseEvent		1161
nim	DataTransferItemKind	dom.html#DataTransferItemKind	enum DataTransferItemKind		1174
nim	DataTransferItem	dom.html#DataTransferItem	type DataTransferItem		1178
nim	DataTransfer	dom.html#DataTransfer	type DataTransfer		1182
nim	DataTransferDropEffect	dom.html#DataTransferDropEffect	enum DataTransferDropEffect		1189
nim	DataTransferEffectAllowed	dom.html#DataTransferEffectAllowed	enum DataTransferEffectAllowed		1195
nim	Drag	dom.html#Drag	DragEventTypes.Drag		1206
nim	DragEnd	dom.html#DragEnd	DragEventTypes.DragEnd		1206
nim	DragEnter	dom.html#DragEnter	DragEventTypes.DragEnter		1206
nim	DragExit	dom.html#DragExit	DragEventTypes.DragExit		1206
nim	DragLeave	dom.html#DragLeave	DragEventTypes.DragLeave		1206
nim	DragOver	dom.html#DragOver	DragEventTypes.DragOver		1206
nim	DragStart	dom.html#DragStart	DragEventTypes.DragStart		1206
nim	Drop	dom.html#Drop	DragEventTypes.Drop		1206
nim	DragEventTypes	dom.html#DragEventTypes	enum DragEventTypes		1206
nim	DragEvent	dom.html#DragEvent	object DragEvent		1216
nim	ClipboardEvent	dom.html#ClipboardEvent	object ClipboardEvent		1220
nim	StorageEvent	dom.html#StorageEvent	type StorageEvent		1224
nim	TouchList	dom.html#TouchList	type TouchList		1230
nim	Touch	dom.html#Touch	type Touch		1233
nim	TouchEvent	dom.html#TouchEvent	type TouchEvent		1241
nim	Location	dom.html#Location	type Location		1244
nim	History	dom.html#History	type History		1255
nim	Navigator	dom.html#Navigator	type Navigator		1258
nim	Plugin	dom.html#Plugin	object Plugin		1277
nim	MimeType	dom.html#MimeType	object MimeType		1282
nim	LocationBar	dom.html#LocationBar	object LocationBar		1288
nim	MenuBar	dom.html#MenuBar	type MenuBar		1290
nim	PersonalBar	dom.html#PersonalBar	type PersonalBar		1291
nim	ScrollBars	dom.html#ScrollBars	type ScrollBars		1292
nim	ToolBar	dom.html#ToolBar	type ToolBar		1293
nim	StatusBar	dom.html#StatusBar	type StatusBar		1294
nim	Screen	dom.html#Screen	type Screen		1296
nim	TimeOut	dom.html#TimeOut	type TimeOut		1304
nim	Interval	dom.html#Interval	type Interval		1305
nim	AddEventListenerOptions	dom.html#AddEventListenerOptions	object AddEventListenerOptions		1307
nim	FontFaceSetReady	dom.html#FontFaceSetReady	type FontFaceSetReady		1312
nim	FontFaceSet	dom.html#FontFaceSet	type FontFaceSet		1316
nim	ScrollIntoViewOptions	dom.html#ScrollIntoViewOptions	object ScrollIntoViewOptions		1321
nim	MediaQueryList	dom.html#MediaQueryList	type MediaQueryList		1326
nim	DomParser	dom.html#DomParser	type DomParser		1332
nim	DomException	dom.html#DomException	type DomException		1341
nim	FileReader	dom.html#FileReader	type FileReader		1348
nim	FileReaderState	dom.html#FileReaderState	type FileReaderState		1354
nim	RootNodeOptions	dom.html#RootNodeOptions	object RootNodeOptions		1355
nim	DocumentOrShadowRoot	dom.html#DocumentOrShadowRoot	object DocumentOrShadowRoot		1357
nim	ShadowRoot	dom.html#ShadowRoot	type ShadowRoot		1360
nim	ShadowRootInit	dom.html#ShadowRootInit	object ShadowRootInit		1365
nim	HTMLSlotElement	dom.html#HTMLSlotElement	type HTMLSlotElement		1369
nim	SlotOptions	dom.html#SlotOptions	object SlotOptions		1371
nim	fileReaderEmpty	dom.html#fileReaderEmpty	const fileReaderEmpty		1375
nim	fileReaderLoading	dom.html#fileReaderLoading	const fileReaderLoading		1376
nim	fileReaderDone	dom.html#fileReaderDone	const fileReaderDone		1377
nim	id	dom.html#id,Node	proc id(n: Node): cstring		1379
nim	id=	dom.html#id=,Node,cstring	proc id=(n: Node; x: cstring)		1380
nim	class	dom.html#class,Node	proc class(n: Node): cstring		1381
nim	class=	dom.html#class=,Node,cstring	proc class=(n: Node; v: cstring)		1382
nim	value	dom.html#value,Node	proc value(n: Node): cstring		1384
nim	value=	dom.html#value=,Node,cstring	proc value=(n: Node; v: cstring)		1385
nim	checked	dom.html#checked,Node	proc checked(n: Node): bool		1387
nim	checked=	dom.html#checked=,Node,bool	proc checked=(n: Node; v: bool)		1388
nim	disabled=	dom.html#disabled=,Node,bool	proc disabled=(n: Node; v: bool)		1390
nim	len	dom.html#len,Node	proc len(x: Node): int		1468
nim	`[]`	dom.html#[],Node,int	proc `[]`(x: Node; idx: int): Element		1469
nim	getElementById	dom.html#getElementById,cstring	proc getElementById(id: cstring): Element		1470
nim	appendChild	dom.html#appendChild,Node,Node	proc appendChild(n, child: Node)		1471
nim	removeChild	dom.html#removeChild,Node,Node	proc removeChild(n, child: Node)		1472
nim	remove	dom.html#remove,Node	proc remove(child: Node)		1473
nim	replaceChild	dom.html#replaceChild,Node,Node,Node	proc replaceChild(n, newNode, oldNode: Node)		1474
nim	insertBefore	dom.html#insertBefore,Node,Node,Node	proc insertBefore(n, newNode, before: Node)		1475
nim	getElementById	dom.html#getElementById,Document,cstring	proc getElementById(d: Document; id: cstring): Element		1476
nim	createElement	dom.html#createElement,Document,cstring	proc createElement(d: Document; identifier: cstring): Element		1477
nim	createElementNS	dom.html#createElementNS,Document,cstring,cstring	proc createElementNS(d: Document; namespaceURI, qualifiedIdentifier: cstring): Element		1478
nim	createTextNode	dom.html#createTextNode,Document,cstring	proc createTextNode(d: Document; identifier: cstring): Node		1479
nim	createComment	dom.html#createComment,Document,cstring	proc createComment(d: Document; data: cstring): Node		1480
nim	setTimeout	dom.html#setTimeout,proc),int	proc setTimeout(action: proc (); ms: int): TimeOut		1482
nim	clearTimeout	dom.html#clearTimeout,TimeOut	proc clearTimeout(t: TimeOut)		1483
nim	setInterval	dom.html#setInterval,proc),int	proc setInterval(action: proc (); ms: int): Interval		1484
nim	clearInterval	dom.html#clearInterval,Interval	proc clearInterval(i: Interval)		1485
nim	addEventListener	dom.html#addEventListener,EventTarget,cstring,proc(Event),bool	proc addEventListener(et: EventTarget; ev: cstring; cb: proc (ev: Event);\n                 useCapture: bool = false)		1490
nim	addEventListener	dom.html#addEventListener,EventTarget,cstring,proc(Event),AddEventListenerOptions	proc addEventListener(et: EventTarget; ev: cstring; cb: proc (ev: Event);\n                 options: AddEventListenerOptions)		1491
nim	dispatchEvent	dom.html#dispatchEvent,EventTarget,Event	proc dispatchEvent(et: EventTarget; ev: Event)		1492
nim	removeEventListener	dom.html#removeEventListener,EventTarget,cstring,proc(Event)	proc removeEventListener(et: EventTarget; ev: cstring; cb: proc (ev: Event))		1493
nim	alert	dom.html#alert,Window,cstring	proc alert(w: Window; msg: cstring)		1496
nim	back	dom.html#back,Window	proc back(w: Window)		1497
nim	blur	dom.html#blur,Window	proc blur(w: Window)		1498
nim	clearInterval	dom.html#clearInterval,Window,Interval	proc clearInterval(w: Window; interval: Interval)		1499
nim	clearTimeout	dom.html#clearTimeout,Window,TimeOut	proc clearTimeout(w: Window; timeout: TimeOut)		1500
nim	close	dom.html#close,Window	proc close(w: Window)		1501
nim	confirm	dom.html#confirm,Window,cstring	proc confirm(w: Window; msg: cstring): bool		1502
nim	disableExternalCapture	dom.html#disableExternalCapture,Window	proc disableExternalCapture(w: Window)		1503
nim	enableExternalCapture	dom.html#enableExternalCapture,Window	proc enableExternalCapture(w: Window)		1504
nim	find	dom.html#find,Window,cstring	proc find(w: Window; text: cstring; caseSensitive = false; backwards = false): bool		1505
nim	focus	dom.html#focus,Window	proc focus(w: Window)		1507
nim	forward	dom.html#forward,Window	proc forward(w: Window)		1508
nim	getComputedStyle	dom.html#getComputedStyle,Window,Node,Node	proc getComputedStyle(w: Window; e: Node; pe: Node = nil): Style		1509
nim	handleEvent	dom.html#handleEvent,Window,Event	proc handleEvent(w: Window; e: Event)		1512
nim	home	dom.html#home,Window	proc home(w: Window)		1513
nim	moveBy	dom.html#moveBy,Window,int,int	proc moveBy(w: Window; x, y: int)		1514
nim	moveTo	dom.html#moveTo,Window,int,int	proc moveTo(w: Window; x, y: int)		1515
nim	open	dom.html#open,Window,cstring,cstring,cstring	proc open(w: Window; uri, windowname: cstring; properties: cstring = nil): Window		1516
nim	print	dom.html#print,Window	proc print(w: Window)		1518
nim	prompt	dom.html#prompt,Window,cstring,cstring	proc prompt(w: Window; text, default: cstring): cstring		1519
nim	resizeBy	dom.html#resizeBy,Window,int,int	proc resizeBy(w: Window; x, y: int)		1520
nim	resizeTo	dom.html#resizeTo,Window,int,int	proc resizeTo(w: Window; x, y: int)		1521
nim	routeEvent	dom.html#routeEvent,Window,Event	proc routeEvent(w: Window; event: Event)		1522
nim	scrollBy	dom.html#scrollBy,Window,int,int	proc scrollBy(w: Window; x, y: int)		1523
nim	scrollTo	dom.html#scrollTo,Window,int,int	proc scrollTo(w: Window; x, y: int)		1524
nim	setInterval	dom.html#setInterval,Window,cstring,int	proc setInterval(w: Window; code: cstring; pause: int): Interval		1525
nim	setInterval	dom.html#setInterval,Window,proc),int	proc setInterval(w: Window; function: proc (); pause: int): Interval		1526
nim	setTimeout	dom.html#setTimeout,Window,cstring,int	proc setTimeout(w: Window; code: cstring; pause: int): TimeOut		1527
nim	setTimeout	dom.html#setTimeout,Window,proc),int	proc setTimeout(w: Window; function: proc (); pause: int): Interval		1528
nim	stop	dom.html#stop,Window	proc stop(w: Window)		1529
nim	requestAnimationFrame	dom.html#requestAnimationFrame,Window,proc(float)	proc requestAnimationFrame(w: Window; function: proc (time: float)): int		1530
nim	cancelAnimationFrame	dom.html#cancelAnimationFrame,Window,int	proc cancelAnimationFrame(w: Window; id: int)		1531
nim	matchMedia	dom.html#matchMedia,Window,cstring	proc matchMedia(w: Window; mediaQueryString: cstring): MediaQueryList		1532
nim	appendData	dom.html#appendData,Node,cstring	proc appendData(n: Node; data: cstring)		1535
nim	cloneNode	dom.html#cloneNode,Node,bool	proc cloneNode(n: Node; copyContent: bool): Node		1536
nim	deleteData	dom.html#deleteData,Node,int,int	proc deleteData(n: Node; start, len: int)		1537
nim	focus	dom.html#focus,Node	proc focus(e: Node)		1538
nim	getAttribute	dom.html#getAttribute,Node,cstring	proc getAttribute(n: Node; attr: cstring): cstring		1539
nim	getAttributeNode	dom.html#getAttributeNode,Node,cstring	proc getAttributeNode(n: Node; attr: cstring): Node		1540
nim	hasAttribute	dom.html#hasAttribute,Node,cstring	proc hasAttribute(n: Node; attr: cstring): bool		1541
nim	hasChildNodes	dom.html#hasChildNodes,Node	proc hasChildNodes(n: Node): bool		1542
nim	normalize	dom.html#normalize,Node	proc normalize(n: Node)		1543
nim	insertData	dom.html#insertData,Node,int,cstring	proc insertData(n: Node; position: int; data: cstring)		1544
nim	removeAttribute	dom.html#removeAttribute,Node,cstring	proc removeAttribute(n: Node; attr: cstring)		1545
nim	removeAttributeNode	dom.html#removeAttributeNode,Node,Node	proc removeAttributeNode(n, attr: Node)		1546
nim	replaceData	dom.html#replaceData,Node,int,int,cstring	proc replaceData(n: Node; start, len: int; text: cstring)		1547
nim	scrollIntoView	dom.html#scrollIntoView,Node	proc scrollIntoView(n: Node)		1548
nim	scrollIntoView	dom.html#scrollIntoView,Node,ScrollIntoViewOptions	proc scrollIntoView(n: Node; options: ScrollIntoViewOptions)		1549
nim	setAttribute	dom.html#setAttribute,Node,cstring,cstring	proc setAttribute(n: Node; name, value: cstring)		1550
nim	setAttributeNode	dom.html#setAttributeNode,Node,Node	proc setAttributeNode(n: Node; attr: Node)		1551
nim	querySelector	dom.html#querySelector,Node,cstring	proc querySelector(n: Node; selectors: cstring): Element		1552
nim	querySelectorAll	dom.html#querySelectorAll,Node,cstring	proc querySelectorAll(n: Node; selectors: cstring): seq[Element]		1553
nim	compareDocumentPosition	dom.html#compareDocumentPosition,Node,Node	proc compareDocumentPosition(n: Node; otherNode: Node): int		1554
nim	lookupPrefix	dom.html#lookupPrefix,Node	proc lookupPrefix(n: Node): cstring		1555
nim	lookupNamespaceURI	dom.html#lookupNamespaceURI,Node	proc lookupNamespaceURI(n: Node): cstring		1556
nim	isDefaultNamespace	dom.html#isDefaultNamespace,Node	proc isDefaultNamespace(n: Node): bool		1557
nim	contains	dom.html#contains,Node	proc contains(n: Node): bool		1558
nim	isEqualNode	dom.html#isEqualNode,Node	proc isEqualNode(n: Node): bool		1559
nim	isSameNode	dom.html#isSameNode,Node	proc isSameNode(n: Node): bool		1560
nim	getRootNode	dom.html#getRootNode,Node,RootNodeOptions	proc getRootNode(n: Node; options: RootNodeOptions): Node		1563
nim	getSelection	dom.html#getSelection,DocumentOrShadowRoot	proc getSelection(n: DocumentOrShadowRoot): Selection		1566
nim	elementFromPoint	dom.html#elementFromPoint,DocumentOrShadowRoot,float,float	proc elementFromPoint(n: DocumentOrShadowRoot; x, y: float): Element		1567
nim	attachShadow	dom.html#attachShadow,Element	proc attachShadow(n: Element): ShadowRoot		1570
nim	assignedNodes	dom.html#assignedNodes,HTMLSlotElement,SlotOptions	proc assignedNodes(n: HTMLSlotElement; options: SlotOptions): seq[Node]		1571
nim	assignedElements	dom.html#assignedElements,HTMLSlotElement,SlotOptions	proc assignedElements(n: HTMLSlotElement; options: SlotOptions): seq[Element]		1572
nim	createAttribute	dom.html#createAttribute,Document,cstring	proc createAttribute(d: Document; identifier: cstring): Node		1575
nim	getElementsByName	dom.html#getElementsByName,Document,cstring	proc getElementsByName(d: Document; name: cstring): seq[Element]		1576
nim	getElementsByTagName	dom.html#getElementsByTagName,Document,cstring	proc getElementsByTagName(d: Document; name: cstring): seq[Element]		1577
nim	getElementsByClassName	dom.html#getElementsByClassName,Document,cstring	proc getElementsByClassName(d: Document; name: cstring): seq[Element]		1578
nim	insertNode	dom.html#insertNode,Range,Node	proc insertNode(range: Range; node: Node)		1579
nim	getSelection	dom.html#getSelection,Document	proc getSelection(d: Document): Selection		1580
nim	handleEvent	dom.html#handleEvent,Document,Event	proc handleEvent(d: Document; event: Event)		1581
nim	open	dom.html#open,Document	proc open(d: Document)		1582
nim	routeEvent	dom.html#routeEvent,Document,Event	proc routeEvent(d: Document; event: Event)		1583
nim	write	dom.html#write,Document,cstring	proc write(d: Document; text: cstring)		1584
nim	writeln	dom.html#writeln,Document,cstring	proc writeln(d: Document; text: cstring)		1585
nim	querySelector	dom.html#querySelector,Document,cstring	proc querySelector(d: Document; selectors: cstring): Element		1586
nim	querySelectorAll	dom.html#querySelectorAll,Document,cstring	proc querySelectorAll(d: Document; selectors: cstring): seq[Element]		1587
nim	blur	dom.html#blur,Element	proc blur(e: Element)		1590
nim	click	dom.html#click,Element	proc click(e: Element)		1591
nim	focus	dom.html#focus,Element	proc focus(e: Element)		1592
nim	handleEvent	dom.html#handleEvent,Element,Event	proc handleEvent(e: Element; event: Event)		1593
nim	select	dom.html#select,Element	proc select(e: Element)		1594
nim	getElementsByTagName	dom.html#getElementsByTagName,Element,cstring	proc getElementsByTagName(e: Element; name: cstring): seq[Element]		1595
nim	getElementsByClassName	dom.html#getElementsByClassName,Element,cstring	proc getElementsByClassName(e: Element; name: cstring): seq[Element]		1596
nim	reset	dom.html#reset,FormElement	proc reset(f: FormElement)		1599
nim	submit	dom.html#submit,FormElement	proc submit(f: FormElement)		1600
nim	checkValidity	dom.html#checkValidity,FormElement	proc checkValidity(e: FormElement): bool		1601
nim	reportValidity	dom.html#reportValidity,FormElement	proc reportValidity(e: FormElement): bool		1602
nim	play	dom.html#play,EmbedElement	proc play(e: EmbedElement)		1605
nim	stop	dom.html#stop,EmbedElement	proc stop(e: EmbedElement)		1606
nim	reload	dom.html#reload,Location	proc reload(loc: Location)		1609
nim	replace	dom.html#replace,Location,cstring	proc replace(loc: Location; s: cstring)		1610
nim	back	dom.html#back,History	proc back(h: History)		1613
nim	forward	dom.html#forward,History	proc forward(h: History)		1614
nim	go	dom.html#go,History,int	proc go(h: History; pagesToJump: int)		1615
nim	pushState	dom.html#pushState,History,T,cstring,cstring	proc pushState[T](h: History; stateObject: T; title, url: cstring)		1616
nim	javaEnabled	dom.html#javaEnabled,Navigator	proc javaEnabled(h: Navigator): bool		1619
nim	canShare	dom.html#canShare,Navigator,cstring	proc canShare(self: Navigator; data: cstring): bool		1621
nim	sendBeacon	dom.html#sendBeacon,Navigator,cstring,cstring	proc sendBeacon(self: Navigator; url, data: cstring): bool		1622
nim	vibrate	dom.html#vibrate,Navigator,cint	proc vibrate(self: Navigator; pattern: cint): bool		1623
nim	vibrate	dom.html#vibrate,Navigator,openArray[cint]	proc vibrate(self: Navigator; pattern: openArray[cint]): bool		1624
nim	registerProtocolHandler	dom.html#registerProtocolHandler,Navigator,cstring,cstring,cstring	proc registerProtocolHandler(self: Navigator; scheme, url, title: cstring)		1625
nim	add	dom.html#add,ClassList,cstring	proc add(c: ClassList; class: cstring)		1628
nim	remove	dom.html#remove,ClassList,cstring	proc remove(c: ClassList; class: cstring)		1629
nim	contains	dom.html#contains,ClassList,cstring	proc contains(c: ClassList; class: cstring): bool		1630
nim	toggle	dom.html#toggle,ClassList,cstring	proc toggle(c: ClassList; class: cstring)		1631
nim	getPropertyValue	dom.html#getPropertyValue,Style,cstring	proc getPropertyValue(s: Style; property: cstring): cstring		1634
nim	removeProperty	dom.html#removeProperty,Style,cstring	proc removeProperty(s: Style; property: cstring)		1635
nim	setProperty	dom.html#setProperty,Style,cstring,cstring,string	proc setProperty(s: Style; property, value: cstring; priority = "")		1636
nim	getPropertyPriority	dom.html#getPropertyPriority,Style,cstring	proc getPropertyPriority(s: Style; property: cstring): cstring		1637
nim	preventDefault	dom.html#preventDefault,Event	proc preventDefault(ev: Event)		1640
nim	stopImmediatePropagation	dom.html#stopImmediatePropagation,Event	proc stopImmediatePropagation(ev: Event)		1641
nim	stopPropagation	dom.html#stopPropagation,Event	proc stopPropagation(ev: Event)		1642
nim	getModifierState	dom.html#getModifierState,KeyboardEvent,cstring	proc getModifierState(ev: KeyboardEvent; keyArg: cstring): bool		1645
nim	getModifierState	dom.html#getModifierState,MouseEvent,cstring	proc getModifierState(ev: MouseEvent; keyArg: cstring): bool		1648
nim	identifiedTouch	dom.html#identifiedTouch,TouchList	proc identifiedTouch(list: TouchList): Touch		1651
nim	item	dom.html#item,TouchList,int	proc item(list: TouchList; i: int): Touch		1652
nim	clearData	dom.html#clearData,DataTransfer,cstring	proc clearData(dt: DataTransfer; format: cstring)		1655
nim	getData	dom.html#getData,DataTransfer,cstring	proc getData(dt: DataTransfer; format: cstring): cstring		1656
nim	setData	dom.html#setData,DataTransfer,cstring,cstring	proc setData(dt: DataTransfer; format: cstring; data: cstring)		1657
nim	setDragImage	dom.html#setDragImage,DataTransfer,Element,int,int	proc setDragImage(dt: DataTransfer; img: Element; xOffset: int; yOffset: int)		1658
nim	getAsFile	dom.html#getAsFile,DataTransferItem	proc getAsFile(dti: DataTransferItem): File		1661
nim	setSelectionRange	dom.html#setSelectionRange,InputElement,int,int,cstring	proc setSelectionRange(e: InputElement; selectionStart: int; selectionEnd: int;\n                  selectionDirection: cstring = "none")		1664
nim	setRangeText	dom.html#setRangeText,InputElement,cstring,int,int,cstring	proc setRangeText(e: InputElement; replacement: cstring; startindex: int = 0;\n             endindex: int = 0; selectionMode: cstring = "preserve")		1665
nim	setCustomValidity	dom.html#setCustomValidity,InputElement,cstring	proc setCustomValidity(e: InputElement; error: cstring)		1666
nim	checkValidity	dom.html#checkValidity,InputElement	proc checkValidity(e: InputElement): bool		1667
nim	slice	dom.html#slice,Blob,int,int,cstring	proc slice(e: Blob; startindex: int = 0; endindex: int = e.size;\n      contentType: cstring = "")		1670
nim	now	dom.html#now,Performance	proc now(p: Performance): float		1673
nim	removeAllRanges	dom.html#removeAllRanges,Selection	proc removeAllRanges(s: Selection)		1676
nim	deleteFromDocument	dom.html#deleteFromDocument,Selection	proc deleteFromDocument(s: Selection)		1677
nim	getRangeAt	dom.html#getRangeAt,Selection,int	proc getRangeAt(s: Selection; index: int): Range		1678
nim	toString	dom.html#toString.c,Selection	converter toString(s: Selection): cstring		1679
nim	`$`	dom.html#$,Selection	proc `$`(s: Selection): string		1680
nim	getItem	dom.html#getItem,Storage,cstring	proc getItem(s: Storage; key: cstring): cstring		1683
nim	setItem	dom.html#setItem,Storage,cstring,cstring	proc setItem(s: Storage; key, value: cstring)		1684
nim	clear	dom.html#clear,Storage	proc clear(s: Storage)		1685
nim	removeItem	dom.html#removeItem,Storage,cstring	proc removeItem(s: Storage; key: cstring)		1686
nim	setAttr	dom.html#setAttr,Node,cstring,cstring	proc setAttr(n: Node; key, val: cstring)		1690
nim	window	dom.html#window_2	var window		1693
nim	navigator	dom.html#navigator_2	var navigator		1694
nim	screen	dom.html#screen_2	var screen		1695
nim	document	dom.html#document_2	var document		1698
nim	decodeURI	dom.html#decodeURI,cstring	proc decodeURI(uri: cstring): cstring		1700
nim	encodeURI	dom.html#encodeURI,cstring	proc encodeURI(uri: cstring): cstring		1701
nim	escape	dom.html#escape,cstring	proc escape(uri: cstring): cstring		1703
nim	unescape	dom.html#unescape,cstring	proc unescape(uri: cstring): cstring		1704
nim	decodeURIComponent	dom.html#decodeURIComponent,cstring	proc decodeURIComponent(uri: cstring): cstring		1706
nim	encodeURIComponent	dom.html#encodeURIComponent,cstring	proc encodeURIComponent(uri: cstring): cstring		1707
nim	isFinite	dom.html#isFinite,BiggestFloat	proc isFinite(x: BiggestFloat): bool		1708
nim	isNaN	dom.html#isNaN,BiggestFloat	proc isNaN(x: BiggestFloat): bool		1709
nim	newEvent	dom.html#newEvent,cstring	proc newEvent(name: cstring): Event		1712
nim	getElementsByClass	dom.html#getElementsByClass,Node,cstring	proc getElementsByClass(n: Node; name: cstring): seq[Node]		1714
nim	BoundingRect	dom.html#BoundingRect	object BoundingRect		1719
nim	getBoundingClientRect	dom.html#getBoundingClientRect,Node	proc getBoundingClientRect(e: Node): BoundingRect		1722
nim	clientHeight	dom.html#clientHeight	proc clientHeight(): int		1724
nim	clientWidth	dom.html#clientWidth	proc clientWidth(): int		1726
nim	inViewport	dom.html#inViewport,Node	proc inViewport(el: Node): bool		1729
nim	scrollTop	dom.html#scrollTop,Node	proc scrollTop(e: Node): int		1735
nim	scrollTop=	dom.html#scrollTop=,Node,int	proc scrollTop=(e: Node; value: int)		1736
nim	scrollLeft	dom.html#scrollLeft,Node	proc scrollLeft(e: Node): int		1737
nim	scrollHeight	dom.html#scrollHeight,Node	proc scrollHeight(e: Node): int		1738
nim	scrollWidth	dom.html#scrollWidth,Node	proc scrollWidth(e: Node): int		1739
nim	offsetHeight	dom.html#offsetHeight,Node	proc offsetHeight(e: Node): int		1740
nim	offsetWidth	dom.html#offsetWidth,Node	proc offsetWidth(e: Node): int		1741
nim	offsetTop	dom.html#offsetTop,Node	proc offsetTop(e: Node): int		1742
nim	offsetLeft	dom.html#offsetLeft,Node	proc offsetLeft(e: Node): int		1743
nim	newDomParser	dom.html#newDomParser	proc newDomParser(): DomParser		1746
nim	parseFromString	dom.html#parseFromString,DomParser,cstring,cstring	proc parseFromString(this: DomParser; str: cstring; mimeType: cstring): Document		1748
nim	newDomException	dom.html#newDomException	proc newDomException(): DomException		1751
nim	message	dom.html#message,DomException	proc message(ex: DomException): cstring		1753
nim	name	dom.html#name,DomException	proc name(ex: DomException): cstring		1755
nim	newFileReader	dom.html#newFileReader	proc newFileReader(): FileReader		1758
nim	error	dom.html#error,FileReader	proc error(f: FileReader): DomException		1760
nim	readyState	dom.html#readyState,FileReader	proc readyState(f: FileReader): FileReaderState		1762
nim	resultAsString	dom.html#resultAsString,FileReader	proc resultAsString(f: FileReader): cstring		1764
nim	abort	dom.html#abort,FileReader	proc abort(f: FileReader)		1766
nim	readAsBinaryString	dom.html#readAsBinaryString,FileReader,Blob	proc readAsBinaryString(f: FileReader; b: Blob)		1768
nim	readAsDataURL	dom.html#readAsDataURL,FileReader,Blob	proc readAsDataURL(f: FileReader; b: Blob)		1770
nim	readAsText	dom.html#readAsText,FileReader,	proc readAsText(f: FileReader; b: Blob | File; encoding = cstring"UTF-8")		1772
nim	elementsFromPoint	dom.html#elementsFromPoint,DocumentOrShadowRoot,float,float	proc elementsFromPoint(n: DocumentOrShadowRoot; x, y: float): seq[Element]		1776
nim	insertAdjacentText	dom.html#insertAdjacentText,Node,cstring,cstring	proc insertAdjacentText(self: Node; position, data: cstring)		1781
nim	insertAdjacentElement	dom.html#insertAdjacentElement,Node,cstring,Node	proc insertAdjacentElement(self: Node; position: cstring; element: Node)		1784
nim	insertAdjacentHTML	dom.html#insertAdjacentHTML,Node,cstring,cstring	proc insertAdjacentHTML(self: Node; position, html: cstring)		1787
nim	after	dom.html#after,Node,Node	proc after(self: Node; element: Node): Node		1790
nim	before	dom.html#before,Node,Node	proc before(self: Node; element: Node): Node		1793
nim	append	dom.html#append,Node,Node	proc append(self: Node; element: Node): Node		1796
nim	closest	dom.html#closest,Node,cstring	proc closest(self: Node; cssSelector: cstring): Node		1799
nim	hasAttributeNS	dom.html#hasAttributeNS,Node,cstring,cstring	proc hasAttributeNS(self: Node; namespace, localName: cstring): bool		1802
nim	removeAttributeNS	dom.html#removeAttributeNS,Node,cstring,cstring	proc removeAttributeNS(self: Node; namespace, attributeName: cstring)		1805
nim	hasPointerCapture	dom.html#hasPointerCapture,Node,SomeNumber	proc hasPointerCapture(self: Node; pointerId: SomeNumber): bool		1808
nim	releasePointerCapture	dom.html#releasePointerCapture,Node,SomeNumber	proc releasePointerCapture(self: Node; pointerId: SomeNumber)		1811
nim	requestPointerLock	dom.html#requestPointerLock,Node	proc requestPointerLock(self: Node)		1814
nim	replaceChildren	dom.html#replaceChildren,Node,Node	proc replaceChildren(self: Node; replacements: Node)		1817
nim	replaceWith	dom.html#replaceWith,Node,Node	proc replaceWith(self: Node; replacements: Node)		1820
nim	scrollIntoViewIfNeeded	dom.html#scrollIntoViewIfNeeded,Node,bool	proc scrollIntoViewIfNeeded(self: Node; centerIfNeeded: bool)		1823
nim	setHTML	dom.html#setHTML,Node,cstring	proc setHTML(self: Node; html: cstring)		1826
nim	toggleAttribute	dom.html#toggleAttribute,Node,cstring	proc toggleAttribute(self: Node; name: cstring; force = false): bool		1829
nim	matches	dom.html#matches,Node,cstring	proc matches(self: Node; cssSelector: cstring): bool		1832
nim	VisualViewport	dom.html#VisualViewport	type VisualViewport		1837
nim	visualViewport	dom.html#visualViewport,Window	proc visualViewport(self: Window): VisualViewport		1841
heading	Document Ready	dom.html#document-ready	 Document Ready		0
heading	Document onUnload	dom.html#document-onunload	 Document onUnload		0
heading	Document Autorefresh	dom.html#document-autorefresh	 Document Autorefresh		0
nimgrp	getselection	dom.html#getSelection-procs-all	proc		1566
nimgrp	cleartimeout	dom.html#clearTimeout-procs-all	proc		1483
nimgrp	queryselector	dom.html#querySelector-procs-all	proc		1552
nimgrp	scrollintoview	dom.html#scrollIntoView-procs-all	proc		1548
nimgrp	vibrate	dom.html#vibrate-procs-all	proc		1623
nimgrp	queryselectorall	dom.html#querySelectorAll-procs-all	proc		1553
nimgrp	addeventlistener	dom.html#addEventListener-procs-all	proc		1490
nimgrp	settimeout	dom.html#setTimeout-procs-all	proc		1482
nimgrp	focus	dom.html#focus-procs-all	proc		1507
nimgrp	stop	dom.html#stop-procs-all	proc		1529
nimgrp	getelementsbyclassname	dom.html#getElementsByClassName-procs-all	proc		1578
nimgrp	back	dom.html#back-procs-all	proc		1497
nimgrp	getelementbyid	dom.html#getElementById-procs-all	proc		1470
nimgrp	blur	dom.html#blur-procs-all	proc		1498
nimgrp	contains	dom.html#contains-procs-all	proc		1558
nimgrp	setinterval	dom.html#setInterval-procs-all	proc		1484
nimgrp	getelementsbytagname	dom.html#getElementsByTagName-procs-all	proc		1577
nimgrp	handleevent	dom.html#handleEvent-procs-all	proc		1512
nimgrp	remove	dom.html#remove-procs-all	proc		1473
nimgrp	routeevent	dom.html#routeEvent-procs-all	proc		1522
nimgrp	open	dom.html#open-procs-all	proc		1516
nimgrp	clearinterval	dom.html#clearInterval-procs-all	proc		1485
nimgrp	getmodifierstate	dom.html#getModifierState-procs-all	proc		1645
nimgrp	forward	dom.html#forward-procs-all	proc		1508
nimgrp	checkvalidity	dom.html#checkValidity-procs-all	proc		1601
