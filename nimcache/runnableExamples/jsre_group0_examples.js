/* Generated by the Nim Compiler v2.2.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI33555836 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555167 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555174 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
var NNI33555172 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555172.node = NNI33555172;
NTI33555174.base = NTI33555171;
NTI33555175.base = NTI33555171;
var NNI33555171 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555174, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555175, name: "up", sons: null}]};
NTI33555171.node = NNI33555171;
var NNI33555167 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555167.node = NNI33555167;
NTI33555171.base = NTI33555167;
NTI33555172.base = NTI33555171;
NTI134217745.base = NTI33555172;
var NNI33555836 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554450, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554450, name: "Field2", sons: null}]};
NTI33555836.node = NNI33555836;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
NTI134217741.base = NTI33555172;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555172;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555172;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_p0, src_p1, ti_p2) {
  var result_33557322 = null;

    switch (ti_p2.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer__system_u2870(ti_p2))) {
      result_33557322 = src_p1;
      }
      else {
        result_33557322 = [src_p1[0], src_p1[1]];
      }
      
      break;
    case 19:
            if (dest_p0 === null || dest_p0 === undefined) {
        dest_p0 = {};
      }
      else {
        for (var key in dest_p0) { delete dest_p0[key]; }
      }
      for (var key in src_p1) { dest_p0[key] = src_p1[key]; }
      result_33557322 = dest_p0;
    
      break;
    case 18:
    case 17:
      if (!((ti_p2.base == null))) {
      result_33557322 = nimCopy(dest_p0, src_p1, ti_p2.base);
      }
      else {
      if ((ti_p2.kind == 17)) {
      result_33557322 = (dest_p0 === null || dest_p0 === undefined) ? {m_type: ti_p2} : dest_p0;
      }
      else {
        result_33557322 = (dest_p0 === null || dest_p0 === undefined) ? {} : dest_p0;
      }
      }
      nimCopyAux(result_33557322, src_p1, ti_p2.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_p1)) { 
        if(dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
          dest_p0 = new src_p1.constructor(src_p1);
        } else {
          dest_p0.set(src_p1, 0);
        }
        result_33557322 = dest_p0;
      } else {
        if (src_p1 === null) {
          result_33557322 = null;
        }
        else {
          if (dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
            dest_p0 = new Array(src_p1.length);
          }
          result_33557322 = dest_p0;
          for (var i = 0; i < src_p1.length; ++i) {
            result_33557322[i] = nimCopy(result_33557322[i], src_p1[i], ti_p2.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_p1 === null) {
        result_33557322 = null;
      }
      else {
        if (dest_p0 === null || dest_p0 === undefined || dest_p0.length != src_p1.length) {
          dest_p0 = new Array(src_p1.length);
        }
        result_33557322 = dest_p0;
        for (var i = 0; i < src_p1.length; ++i) {
          result_33557322[i] = nimCopy(result_33557322[i], src_p1[i], ti_p2.base);
        }
      }
    
      break;
    case 28:
            if (src_p1 !== null) {
        result_33557322 = src_p1.slice(0);
      }
    
      break;
    default: 
      result_33557322 = src_p1;
      break;
    }

  return result_33557322;

}

function arrayConstr(len_p0, value_p1, typ_p2) {
        var result = new Array(len_p0);
    for (var i = 0; i < len_p0; ++i) result[i] = nimCopy(null, value_p1, typ_p2);
    return result;
  

  
}

function mnewString(len_p0) {
        var result = new Array(len_p0);
    for (var i = 0; i < len_p0; i++) {result[i] = 0;}
    return result;
  

  
}

function addInt(a_p0, b_p1) {
        var result = a_p0 + b_p1;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_p0, a_p1, b_p2) {
  var result_33557362 = 0;

  BeforeRet: {
    if (((a_p1 <= i_p0) && (i_p0 <= b_p2))) {
    result_33557362 = i_p0;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557362;

}

function chckIndx(i_p0, a_p1, b_p2) {
  var result_33557357 = 0;

  BeforeRet: {
    if (((a_p1 <= i_p0) && (i_p0 <= b_p2))) {
    result_33557357 = i_p0;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_p0, a_p1, b_p2);
    }
    
  };

  return result_33557357;

}

function cstrToNimstr(c_p0) {
      var ln = c_p0.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_p0.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_p0.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function toJSStr(s_p0) {
  var result_33556911 = null;

    var res_33556965 = newSeq__system_u2508((s_p0).length);
    var i_33556966 = 0;
    var j_33556967 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556966 < (s_p0).length)) break Label2;
          var c_33556968 = s_p0[i_33556966];
          if ((c_33556968 < 128)) {
          res_33556965[j_33556967] = String.fromCharCode(c_33556968);
          i_33556966 += 1;
          }
          else {
            var helper_33556994 = newSeq__system_u2508(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556995 = c_33556968.toString(16);
                  if ((((code_33556995) == null ? 0 : (code_33556995).length) == 1)) {
                  helper_33556994.push("%0");;
                  }
                  else {
                  helper_33556994.push("%");;
                  }
                  
                  helper_33556994.push(code_33556995);;
                  i_33556966 += 1;
                  if ((((s_p0).length <= i_33556966) || (s_p0[i_33556966] < 128))) {
                  break Label3;
                  }
                  
                  c_33556968 = s_p0[i_33556966];
                }
            };
++excHandler;
            try {
            res_33556965[j_33556967] = decodeURIComponent(helper_33556994.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556965[j_33556967] = helper_33556994.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556967 += 1;
        }
    };
    if (res_33556965.length < j_33556967) { for (var i = res_33556965.length ; i < j_33556967 ; ++i) res_33556965.push(null); }
               else { res_33556965.length = j_33556967; };
    result_33556911 = res_33556965.join("");

  return result_33556911;

}

function raiseException(e_p0, ename_p1) {
    e_p0.name = ename_p1;
    if ((excHandler == 0)) {
    unhandledException(e_p0);
    }
    
    e_p0.trace = nimCopy(null, rawWriteStackTrace__system_u2181(), NTI33554449);
    throw e_p0;

  
}

function makeNimstrLit(c_p0) {
      var result = [];
  for (var i = 0; i < c_p0.length; ++i) {
    result[i] = c_p0.charCodeAt(i);
  }
  return result;
  

  
}

function subInt(a_p0, b_p1) {
        var result = a_p0 - b_p1;
    checkOverflowInt(result);
    return result;
  

  
}

function eqStrings(a_p0, b_p1) {
        if (a_p0 == b_p1) return true;
    if (a_p0 === null && b_p1.length == 0) return true;
    if (b_p1 === null && a_p0.length == 0) return true;
    if ((!a_p0) || (!b_p1)) return false;
    var alen = a_p0.length;
    if (alen != b_p1.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_p0[i] != b_p1[i]) return false;
    return true;
  

  
}
var F = {procname: "module jsre", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function contains__jsZjsre_u51(pattern_p0, self_p1) {
  var result_671088694 = false;

  var F = {procname: "jsre.contains", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
  framePtr = F;
    F.line = 61;
    F.filename = "jsre.nim";
    result_671088694 = self_p1.test(pattern_p0);
  framePtr = F.prev;

  return result_671088694;

}

function isFatPointer__system_u2870(ti_p0) {
  var result_33557304 = false;

  BeforeRet: {
    result_33557304 = !((ConstSet1[ti_p0.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557304;

}

function nimCopyAux(dest_p0, src_p1, n_p2) {
    switch (n_p2.kind) {
    case 0:
      break;
    case 1:
            dest_p0[n_p2.offset] = nimCopy(dest_p0[n_p2.offset], src_p1[n_p2.offset], n_p2.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_p2.sons.length; i++) {
      nimCopyAux(dest_p0, src_p1, n_p2.sons[i]);
    }
    
      break;
    case 3:
            dest_p0[n_p2.offset] = nimCopy(dest_p0[n_p2.offset], src_p1[n_p2.offset], n_p2.typ);
      for (var i = 0; i < n_p2.sons.length; ++i) {
        nimCopyAux(dest_p0, src_p1, n_p2.sons[i][1]);
      }
    
      break;
    }

  
}

function add__system_u1943(x_p0, x_p0_Idx, y_p1) {
          if (x_p0[x_p0_Idx] === null) { x_p0[x_p0_Idx] = []; }
      var off = x_p0[x_p0_Idx].length;
      x_p0[x_p0_Idx].length += y_p1.length;
      for (var i = 0; i < y_p1.length; ++i) {
        x_p0[x_p0_Idx][off+i] = y_p1.charCodeAt(i);
      }
    

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_p0) {
        if (a_p0 > 2147483647 || a_p0 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function raiseIndexError(i_p0, a_p1, b_p2) {
    var Temporary1;

    if ((b_p2 < a_p1)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32]).concat(HEX24__systemZdollars_u8(i_p0),[32,110,111,116,32,105,110,32],HEX24__systemZdollars_u8(a_p1),[32,46,46,32],HEX24__systemZdollars_u8(b_p2));
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function addChars__stdZprivateZdigitsutils_u202(result_p0, result_p0_Idx, x_p1, start_p2, n_p3) {
    var Temporary1;

  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 44;
    F.filename = "digitsutils.nim";
    var old_301990096 = (result_p0[result_p0_Idx]).length;
    F.line = 45;
    if (result_p0[result_p0_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_p3), 0, 2147483647), Temporary1)) { for (var i = result_p0[result_p0_Idx].length; i < Temporary1; ++i) result_p0[result_p0_Idx].push(0); }
         else {result_p0[result_p0_Idx].length = Temporary1; };
    Label2: {
      F.line = 47;
      var iHEX60gensym4_301990110 = 0;
      F.line = 128;
      F.filename = "iterators_1.nim";
      var i_654311454 = 0;
      Label3: {
        F.line = 129;
          Label4: while (true) {
          if (!(i_654311454 < n_p3)) break Label4;
            F.line = 50;
            F.filename = "digitsutils.nim";
            iHEX60gensym4_301990110 = i_654311454;
            F.line = 47;
            result_p0[result_p0_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_p0[result_p0_Idx]).length - 1)] = x_p1.charCodeAt(chckIndx(addInt(start_p2, iHEX60gensym4_301990110), 0, (x_p1).length - 1));
            F.line = 131;
            F.filename = "iterators_1.nim";
            i_654311454 = addInt(i_654311454, 1);
          }
      };
    };
  framePtr = F.prev;

  
}

function addChars__stdZprivateZdigitsutils_u198(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "addChars.addChars", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 56;
    F.filename = "digitsutils.nim";
    addChars__stdZprivateZdigitsutils_u202(result_p0, result_p0_Idx, x_p1, 0, ((x_p1) == null ? 0 : (x_p1).length));
  framePtr = F.prev;

  
}

function addInt__stdZprivateZdigitsutils_u223(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 112;
    F.filename = "digitsutils.nim";
    addChars__stdZprivateZdigitsutils_u198(result_p0, result_p0_Idx, ((x_p1) + ""));
  framePtr = F.prev;

  
}

function addInt__stdZprivateZdigitsutils_u241(result_p0, result_p0_Idx, x_p1) {
  var F = {procname: "digitsutils.addInt", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/std/private/digitsutils.nim", line: 0};
  framePtr = F;
    F.line = 116;
    F.filename = "digitsutils.nim";
    addInt__stdZprivateZdigitsutils_u223(result_p0, result_p0_Idx, BigInt(x_p1));
  framePtr = F.prev;

  
}

function HEX24__systemZdollars_u8(x_p0) {
  var result_369098762 = [[]];

  var F = {procname: "dollars.$", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/system/dollars.nim", line: 0};
  framePtr = F;
    F.line = 18;
    F.filename = "dollars.nim";
    addInt__stdZprivateZdigitsutils_u241(result_369098762, 0, x_p0);
  framePtr = F.prev;

  return result_369098762[0];

}

function auxWriteStackTrace__system_u2085(f_p0) {
  var result_33556519 = [[]];

    var it_33556527 = f_p0;
    var i_33556528 = 0;
    var total_33556529 = 0;
    var tempFrames_33556530 = arrayConstr(64, {Field0: null, Field1: 0, Field2: null}, NTI33555836);
    Label1: {
        Label2: while (true) {
        if (!(!((it_33556527 == null)) && (i_33556528 <= 63))) break Label2;
          tempFrames_33556530[i_33556528].Field0 = it_33556527.procname;
          tempFrames_33556530[i_33556528].Field1 = it_33556527.line;
          tempFrames_33556530[i_33556528].Field2 = it_33556527.filename;
          i_33556528 += 1;
          total_33556529 += 1;
          it_33556527 = it_33556527.prev;
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((it_33556527 == null))) break Label4;
          total_33556529 += 1;
          it_33556527 = it_33556527.prev;
        }
    };
    result_33556519[0] = nimCopy(null, [], NTI33554449);
    if (!((total_33556529 == i_33556528))) {
    result_33556519[0].push.apply(result_33556519[0], [40]);;
    result_33556519[0].push.apply(result_33556519[0], HEX24__systemZdollars_u8((total_33556529 - i_33556528)));;
    result_33556519[0].push.apply(result_33556519[0], [32,99,97,108,108,115,32,111,109,105,116,116,101,100,41,32,46,46,46,10]);;
    }
    
    Label5: {
      var j_33556563 = 0;
      var colontmp__654311446 = 0;
      colontmp__654311446 = (i_33556528 - 1);
      var res_654311448 = colontmp__654311446;
      Label6: {
          Label7: while (true) {
          if (!(0 <= res_654311448)) break Label7;
            j_33556563 = res_654311448;
            result_33556519[0].push.apply(result_33556519[0], cstrToNimstr(tempFrames_33556530[j_33556563].Field2));;
            if ((0 < tempFrames_33556530[j_33556563].Field1)) {
            result_33556519[0].push.apply(result_33556519[0], [40]);;
            addInt__stdZprivateZdigitsutils_u241(result_33556519, 0, tempFrames_33556530[j_33556563].Field1);
            if (false) {
            result_33556519[0].push.apply(result_33556519[0], [44,32]);;
            addInt__stdZprivateZdigitsutils_u241(result_33556519, 0, 0);
            }
            
            result_33556519[0].push.apply(result_33556519[0], [41]);;
            }
            
            result_33556519[0].push.apply(result_33556519[0], [32,97,116,32]);;
            add__system_u1943(result_33556519, 0, tempFrames_33556530[j_33556563].Field0);
            result_33556519[0].push.apply(result_33556519[0], [10]);;
            res_654311448 -= 1;
          }
      };
    };

  return result_33556519[0];

}

function rawWriteStackTrace__system_u2181() {
  var result_33556614 = [];

    if (!((framePtr == null))) {
    result_33556614 = nimCopy(null, ([84,114,97,99,101,98,97,99,107,32,40,109,111,115,116,32,114,101,99,101,110,116,32,99,97,108,108,32,108,97,115,116,41,10]).concat(auxWriteStackTrace__system_u2085(framePtr)), NTI33554449);
    }
    else {
      result_33556614 = nimCopy(null, [78,111,32,115,116,97,99,107,32,116,114,97,99,101,98,97,99,107,32,97,118,97,105,108,97,98,108,101,10], NTI33554449);
    }
    

  return result_33556614;

}

function newSeq__system_u2508(len_p0) {
  var result_33556944 = [];

  var F = {procname: "newSeq.newSeq", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/system.nim", line: 0};
  framePtr = F;
    F.line = 635;
    F.filename = "system.nim";
    result_33556944 = new Array(len_p0); for (var i = 0 ; i < len_p0 ; ++i) { result_33556944[i] = null; }  framePtr = F.prev;

  return result_33556944;

}

function unhandledException(e_p0) {
    var buf_33556659 = [[]];
    if (!(((e_p0.message).length == 0))) {
    buf_33556659[0].push.apply(buf_33556659[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556659[0].push.apply(buf_33556659[0], e_p0.message);;
    }
    else {
    buf_33556659[0].push.apply(buf_33556659[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556659[0].push.apply(buf_33556659[0], [32,91]);;
    add__system_u1943(buf_33556659, 0, e_p0.name);
    buf_33556659[0].push.apply(buf_33556659[0], [93,10]);;
    buf_33556659[0].push.apply(buf_33556659[0], rawWriteStackTrace__system_u2181());;
    var cbuf_33556660 = toJSStr(buf_33556659[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556660);
  }
  else {
    throw cbuf_33556660;
  }
  

  
}

function sysFatal__stdZassertions_u45(message_p1) {
  var F = {procname: "sysFatal.sysFatal", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/system/fatal.nim", line: 0};
  framePtr = F;
    F.line = 53;
    F.filename = "fatal.nim";
    raiseException({message: nimCopy(null, message_p1, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");
  framePtr = F.prev;

  
}

function raiseAssert__stdZassertions_u43(msg_p0) {
  var F = {procname: "assertions.raiseAssert", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 36;
    F.filename = "assertions.nim";
    sysFatal__stdZassertions_u45(msg_p0);
  framePtr = F.prev;

  
}

function failedAssertImpl__stdZassertions_u85(msg_p0) {
  var F = {procname: "assertions.failedAssertImpl", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/std/assertions.nim", line: 0};
  framePtr = F;
    F.line = 41;
    F.filename = "assertions.nim";
    raiseAssert__stdZassertions_u43(msg_p0);
  framePtr = F.prev;

  
}
var F = {procname: "module jsre_examples_1", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_1.nim", line: 0};
framePtr = F;
F.line = 56;
F.filename = "jsre.nim";
var jsregex_654311427 = new RegExp("bc$", "i");
if (!(contains__jsZjsre_u51("abc", jsregex_654311427))) {
F.line = 56;
failedAssertImpl__stdZassertions_u85(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_1.nim(10, 3) `jsregex in r\"abc\"` "));
}

if (!(!(contains__jsZjsre_u51("abcd", jsregex_654311427)))) {
F.line = 56;
failedAssertImpl__stdZassertions_u85(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_1.nim(11, 3) `jsregex notin r\"abcd\"` "));
}

if (!(contains__jsZjsre_u51("xabc", jsregex_654311427))) {
F.line = 56;
failedAssertImpl__stdZassertions_u85(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_1.nim(12, 3) `\"xabc\".contains jsregex` "));
}

framePtr = F.prev;
var F = {procname: "module jsre_examples_1", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_1.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function startsWith__jsZjsre_u55(pattern_p0, self_p1) {
  var result_671088698 = false;

  var F = {procname: "jsre.startsWith", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
  framePtr = F;
    F.line = 64;
    F.filename = "jsre.nim";
    result_671088698 = contains__jsZjsre_u51(pattern_p0, new RegExp(toJSStr(([94]).concat(cstrToNimstr(self_p1.source))), self_p1.flags));
  framePtr = F.prev;

  return result_671088698;

}
var F = {procname: "module jsre_examples_2", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_2.nim", line: 0};
framePtr = F;
F.line = 65;
F.filename = "jsre.nim";
var jsregex_687865859 = new RegExp("abc", "i");
if (!(startsWith__jsZjsre_u55("abcd", jsregex_687865859))) {
F.line = 65;
failedAssertImpl__stdZassertions_u85(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_2.nim(10, 3) `\"abcd\".startsWith jsregex` "));
}

framePtr = F.prev;
var F = {procname: "module jsre_examples_2", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_2.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function endsWith__jsZjsre_u75(pattern_p0, self_p1) {
  var result_671088718 = false;

  var F = {procname: "jsre.endsWith", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
  framePtr = F;
    F.line = 71;
    F.filename = "jsre.nim";
    result_671088718 = contains__jsZjsre_u51(pattern_p0, new RegExp(toJSStr((cstrToNimstr(self_p1.source)).concat([36])), self_p1.flags));
  framePtr = F.prev;

  return result_671088718;

}
var F = {procname: "module jsre_examples_3", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_3.nim", line: 0};
framePtr = F;
F.line = 72;
F.filename = "jsre.nim";
var jsregex_704643075 = new RegExp("bcd", "i");
if (!(endsWith__jsZjsre_u75("abcd", jsregex_704643075))) {
F.line = 72;
failedAssertImpl__stdZassertions_u85(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_3.nim(10, 3) `\"abcd\".endsWith jsregex` "));
}

framePtr = F.prev;
var F = {procname: "module jsre_examples_3", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_3.nim", line: 0};
framePtr = F;
framePtr = F.prev;

function HEX3DHEX3D__jsre95examples954_u13(x_p0, y_p1) {
  var result_721420305 = false;

  var F = {procname: "==.==", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/system/comparisons.nim", line: 0};
  framePtr = F;
  BeforeRet: {
    F.line = 326;
    F.filename = "comparisons.nim";
    var sameObject_721420313 = false;
    F.line = 327;
    sameObject_721420313 = x_p0 === y_p1;
    if (sameObject_721420313) {
    F.line = 328;
    result_721420305 = true;
    break BeforeRet;
    }
    
    if (!(((x_p0).length == (y_p1).length))) {
    F.line = 331;
    result_721420305 = false;
    break BeforeRet;
    }
    
    Label1: {
      F.line = 333;
      var i_721420327 = 0;
      F.line = 81;
      F.filename = "iterators_1.nim";
      var colontmp__721420466 = 0;
      F.line = 333;
      F.filename = "comparisons.nim";
      colontmp__721420466 = subInt((x_p0).length, 1);
      F.line = 96;
      F.filename = "iterators_1.nim";
      var res_721420468 = 0;
      Label2: {
        F.line = 97;
          Label3: while (true) {
          if (!(res_721420468 <= colontmp__721420466)) break Label3;
            F.line = 333;
            F.filename = "comparisons.nim";
            i_721420327 = res_721420468;
            if (!((x_p0[chckIndx(i_721420327, 0, (x_p0).length - 1)] == y_p1[chckIndx(i_721420327, 0, (y_p1).length - 1)]))) {
            F.line = 335;
            result_721420305 = false;
            break BeforeRet;
            }
            
            F.line = 102;
            F.filename = "iterators_1.nim";
            res_721420468 = addInt(res_721420468, 1);
          }
      };
    };
    F.line = 337;
    F.filename = "comparisons.nim";
    result_721420305 = true;
    break BeforeRet;
  };
  framePtr = F.prev;

  return result_721420305;

}

function HEX24__jsZjsre_u48(self_p0) {
  var result_671088690 = [];

  var F = {procname: "jsre.$", prev: framePtr, filename: "/home/runner/work/Nim/Nim/lib/js/jsre.nim", line: 0};
  framePtr = F;
    F.line = 52;
    F.filename = "jsre.nim";
    result_671088690 = nimCopy(null, cstrToNimstr(self_p0.toString()), NTI33554449);
  framePtr = F.prev;

  return result_671088690;

}
  var Temporary2;

function HEX3Aanonymous__jsre95examples954_u88(m_p0) {
  var result_721420378 = null;

  var F = {procname: "jsre_examples_4.:anonymous", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim", line: 0};
  framePtr = F;
    F.line = 25;
    F.filename = "jsre_examples_4.nim";
    result_721420378 = toJSStr((cstrToNimstr(m_p0[chckIndx(0, 0, (m_p0).length - 1)])).concat(HEX24__systemZdollars_u8((m_p0).length)));
  framePtr = F.prev;

  return result_721420378;

}
var F = {procname: "module jsre_examples_4", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim", line: 0};
framePtr = F;
F.line = 78;
F.filename = "jsre.nim";
var jsregex_721420291 = new RegExp("\\s+", "i");
F.line = 78;
jsregex_721420291.compile("\\w+", "i");
if (!(contains__jsZjsre_u51("nim javascript", jsregex_721420291))) {
F.line = 78;
failedAssertImpl__stdZassertions_u85(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(11, 3) `\"nim javascript\".contains jsregex` "));
}

if (!(HEX3DHEX3D__jsre95examples954_u13((jsregex_721420291.exec("nim javascript") || []), ["nim"]))) {
F.line = 78;
failedAssertImpl__stdZassertions_u85(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(12, 3) `jsregex.exec(r\"nim javascript\") == @[\"nim\".cstring]` "));
}

if (!((jsregex_721420291.toString() == "/\\w+/i"))) {
F.line = 78;
failedAssertImpl__stdZassertions_u85(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(13, 3) `jsregex.toCstring() == r\"/\\w+/i\"` "));
}

F.line = 78;
jsregex_721420291.compile("[0-9]", "i");
if (!(contains__jsZjsre_u51("0123456789abcd", jsregex_721420291))) {
F.line = 78;
failedAssertImpl__stdZassertions_u85(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(15, 3) `\"0123456789abcd\".contains jsregex` "));
}

if (!(eqStrings(HEX24__jsZjsre_u48(jsregex_721420291), [47,91,48,45,57,93,47,105]))) {
F.line = 78;
failedAssertImpl__stdZassertions_u85(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(16, 3) `$jsregex == \"/[0-9]/i\"` "));
}

F.line = 78;
jsregex_721420291.compile("abc", "i");
if (!(startsWith__jsZjsre_u55("abcd", jsregex_721420291))) {
F.line = 78;
failedAssertImpl__stdZassertions_u85(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(18, 3) `\"abcd\".startsWith jsregex` "));
}

if (!(endsWith__jsZjsre_u75("dabc", jsregex_721420291))) {
F.line = 78;
failedAssertImpl__stdZassertions_u85(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(19, 3) `\"dabc\".endsWith jsregex` "));
}

F.line = 78;
jsregex_721420291.compile("\\d", "i");
if (!(HEX3DHEX3D__jsre95examples954_u13(("do1ne".split(jsregex_721420291) || []), ["do", "ne"]))) {
F.line = 78;
failedAssertImpl__stdZassertions_u85(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(21, 3) `\"do1ne\".split(jsregex) == @[\"do\".cstring, \"ne\".cstring]` "));
}

F.line = 78;
jsregex_721420291.compile("[lw]", "i");
if (!(("hello world".replace(jsregex_721420291, "X") == "heXlo world"))) {
F.line = 78;
failedAssertImpl__stdZassertions_u85(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(23, 3) `\"hello world\".replace(jsregex, \"X\") == \"heXlo world\"` "));
}

F.line = 78;
jsregex_721420291.compile("([a-z])\\1*", "g");
  Temporary2 = HEX3Aanonymous__jsre95examples954_u88.bind(null); Temporary2.ClP_0 = HEX3Aanonymous__jsre95examples954_u88; Temporary2.ClE_0 = null;
if (!(("abbcccdddd".replace(jsregex_721420291, Temporary2) == "a1b2c3d4"))) {
F.line = 78;
failedAssertImpl__stdZassertions_u85(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(25, 3) `\"abbcccdddd\".replace(jsregex, proc (m: varargs[cstring]): cstring =\x0A  ($m[0] & $(m.len)).cstring) ==\x0A    \"a1b2c3d4\"` "));
}

F.line = 78;
var digitsRegex_721420388 = new RegExp("\\d");
if (!(HEX3DHEX3D__jsre95examples954_u13(("foo".match(digitsRegex_721420388) || []), []))) {
F.line = 78;
failedAssertImpl__stdZassertions_u85(makeNimstrLit("/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim(27, 3) `\"foo\".match(digitsRegex) == @[]` "));
}

framePtr = F.prev;
var F = {procname: "module jsre_examples_4", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_examples_4.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre_group0_examples", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_group0_examples.nim", line: 0};
framePtr = F;
framePtr = F.prev;
var F = {procname: "module jsre_group0_examples", prev: framePtr, filename: "/home/runner/work/Nim/Nim/doc/html/nimcache/runnableExamples/jsre_group0_examples.nim", line: 0};
framePtr = F;
framePtr = F.prev;
