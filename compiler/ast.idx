nimTitle	ast	ast.html	module ast		0
nim	ccNimCall	ast.html#ccNimCall	TCallingConvention.ccNimCall		27
nim	ccStdCall	ast.html#ccStdCall	TCallingConvention.ccStdCall		27
nim	ccCDecl	ast.html#ccCDecl	TCallingConvention.ccCDecl		27
nim	ccSafeCall	ast.html#ccSafeCall	TCallingConvention.ccSafeCall		27
nim	ccSysCall	ast.html#ccSysCall	TCallingConvention.ccSysCall		27
nim	ccInline	ast.html#ccInline	TCallingConvention.ccInline		27
nim	ccNoInline	ast.html#ccNoInline	TCallingConvention.ccNoInline		27
nim	ccFastCall	ast.html#ccFastCall	TCallingConvention.ccFastCall		27
nim	ccThisCall	ast.html#ccThisCall	TCallingConvention.ccThisCall		27
nim	ccClosure	ast.html#ccClosure	TCallingConvention.ccClosure		27
nim	ccNoConvention	ast.html#ccNoConvention	TCallingConvention.ccNoConvention		27
nim	ccMember	ast.html#ccMember	TCallingConvention.ccMember		27
nim	TCallingConvention	ast.html#TCallingConvention	enum TCallingConvention		27
nim	TNodeKinds	ast.html#TNodeKinds	type TNodeKinds		41
nim	sfUsed	ast.html#sfUsed	TSymFlag.sfUsed		44
nim	sfExported	ast.html#sfExported	TSymFlag.sfExported		44
nim	sfFromGeneric	ast.html#sfFromGeneric	TSymFlag.sfFromGeneric		44
nim	sfGlobal	ast.html#sfGlobal	TSymFlag.sfGlobal		44
nim	sfForward	ast.html#sfForward	TSymFlag.sfForward		44
nim	sfWasForwarded	ast.html#sfWasForwarded	TSymFlag.sfWasForwarded		44
nim	sfImportc	ast.html#sfImportc	TSymFlag.sfImportc		44
nim	sfExportc	ast.html#sfExportc	TSymFlag.sfExportc		44
nim	sfMangleCpp	ast.html#sfMangleCpp	TSymFlag.sfMangleCpp		44
nim	sfVolatile	ast.html#sfVolatile	TSymFlag.sfVolatile		44
nim	sfRegister	ast.html#sfRegister	TSymFlag.sfRegister		44
nim	sfPure	ast.html#sfPure	TSymFlag.sfPure		44
nim	sfNoSideEffect	ast.html#sfNoSideEffect	TSymFlag.sfNoSideEffect		44
nim	sfSideEffect	ast.html#sfSideEffect	TSymFlag.sfSideEffect		44
nim	sfMainModule	ast.html#sfMainModule	TSymFlag.sfMainModule		44
nim	sfSystemModule	ast.html#sfSystemModule	TSymFlag.sfSystemModule		44
nim	sfNoReturn	ast.html#sfNoReturn	TSymFlag.sfNoReturn		44
nim	sfAddrTaken	ast.html#sfAddrTaken	TSymFlag.sfAddrTaken		44
nim	sfCompilerProc	ast.html#sfCompilerProc	TSymFlag.sfCompilerProc		44
nim	sfEscapes	ast.html#sfEscapes	TSymFlag.sfEscapes		44
nim	sfDiscriminant	ast.html#sfDiscriminant	TSymFlag.sfDiscriminant		44
nim	sfRequiresInit	ast.html#sfRequiresInit	TSymFlag.sfRequiresInit		44
nim	sfDeprecated	ast.html#sfDeprecated	TSymFlag.sfDeprecated		44
nim	sfExplain	ast.html#sfExplain	TSymFlag.sfExplain		44
nim	sfError	ast.html#sfError	TSymFlag.sfError		44
nim	sfShadowed	ast.html#sfShadowed	TSymFlag.sfShadowed		44
nim	sfThread	ast.html#sfThread	TSymFlag.sfThread		44
nim	sfCppNonPod	ast.html#sfCppNonPod	TSymFlag.sfCppNonPod		44
nim	sfCompileTime	ast.html#sfCompileTime	TSymFlag.sfCompileTime		44
nim	sfConstructor	ast.html#sfConstructor	TSymFlag.sfConstructor		44
nim	sfDispatcher	ast.html#sfDispatcher	TSymFlag.sfDispatcher		44
nim	sfBorrow	ast.html#sfBorrow	TSymFlag.sfBorrow		44
nim	sfInfixCall	ast.html#sfInfixCall	TSymFlag.sfInfixCall		44
nim	sfNamedParamCall	ast.html#sfNamedParamCall	TSymFlag.sfNamedParamCall		44
nim	sfDiscardable	ast.html#sfDiscardable	TSymFlag.sfDiscardable		44
nim	sfOverridden	ast.html#sfOverridden	TSymFlag.sfOverridden		44
nim	sfCallsite	ast.html#sfCallsite	TSymFlag.sfCallsite		44
nim	sfGenSym	ast.html#sfGenSym	TSymFlag.sfGenSym		44
nim	sfNonReloadable	ast.html#sfNonReloadable	TSymFlag.sfNonReloadable		44
nim	sfGeneratedOp	ast.html#sfGeneratedOp	TSymFlag.sfGeneratedOp		44
nim	sfTemplateParam	ast.html#sfTemplateParam	TSymFlag.sfTemplateParam		44
nim	sfCursor	ast.html#sfCursor	TSymFlag.sfCursor		44
nim	sfInjectDestructors	ast.html#sfInjectDestructors	TSymFlag.sfInjectDestructors		44
nim	sfNeverRaises	ast.html#sfNeverRaises	TSymFlag.sfNeverRaises		44
nim	sfSystemRaisesDefect	ast.html#sfSystemRaisesDefect	TSymFlag.sfSystemRaisesDefect		44
nim	sfUsedInFinallyOrExcept	ast.html#sfUsedInFinallyOrExcept	TSymFlag.sfUsedInFinallyOrExcept		44
nim	sfSingleUsedTemp	ast.html#sfSingleUsedTemp	TSymFlag.sfSingleUsedTemp		44
nim	sfNoalias	ast.html#sfNoalias	TSymFlag.sfNoalias		44
nim	sfEffectsDelayed	ast.html#sfEffectsDelayed	TSymFlag.sfEffectsDelayed		44
nim	sfGeneratedType	ast.html#sfGeneratedType	TSymFlag.sfGeneratedType		44
nim	sfVirtual	ast.html#sfVirtual	TSymFlag.sfVirtual		44
nim	sfByCopy	ast.html#sfByCopy	TSymFlag.sfByCopy		44
nim	sfMember	ast.html#sfMember	TSymFlag.sfMember		44
nim	sfCodegenDecl	ast.html#sfCodegenDecl	TSymFlag.sfCodegenDecl		44
nim	sfWasGenSym	ast.html#sfWasGenSym	TSymFlag.sfWasGenSym		44
nim	sfForceLift	ast.html#sfForceLift	TSymFlag.sfForceLift		44
nim	sfDirty	ast.html#sfDirty	TSymFlag.sfDirty		44
nim	sfCustomPragma	ast.html#sfCustomPragma	TSymFlag.sfCustomPragma		44
nim	sfBase	ast.html#sfBase	TSymFlag.sfBase		44
nim	sfGoto	ast.html#sfGoto	TSymFlag.sfGoto		44
nim	sfAnon	ast.html#sfAnon	TSymFlag.sfAnon		44
nim	sfAllUntyped	ast.html#sfAllUntyped	TSymFlag.sfAllUntyped		44
nim	sfTemplateRedefinition	ast.html#sfTemplateRedefinition	TSymFlag.sfTemplateRedefinition		44
nim	TSymFlag	ast.html#TSymFlag	enum TSymFlag		44
nim	TSymFlags	ast.html#TSymFlags	type TSymFlags		143
nim	sfNoInit	ast.html#sfNoInit	const sfNoInit		146
nim	sfNoForward	ast.html#sfNoForward	const sfNoForward		148
nim	sfReorder	ast.html#sfReorder	const sfReorder		150
nim	sfCompileToCpp	ast.html#sfCompileToCpp	const sfCompileToCpp		153
nim	sfCompileToObjc	ast.html#sfCompileToObjc	const sfCompileToObjc		154
nim	sfExperimental	ast.html#sfExperimental	const sfExperimental		155
nim	sfWrittenTo	ast.html#sfWrittenTo	const sfWrittenTo		156
nim	sfCppMember	ast.html#sfCppMember	const sfCppMember		158
nim	nkWhen	ast.html#nkWhen	const nkWhen		162
nim	nkWhenExpr	ast.html#nkWhenExpr	const nkWhenExpr		163
nim	nkEffectList	ast.html#nkEffectList	const nkEffectList		164
nim	exceptionEffects	ast.html#exceptionEffects	const exceptionEffects		166
nim	requiresEffects	ast.html#requiresEffects	const requiresEffects		167
nim	ensuresEffects	ast.html#ensuresEffects	const ensuresEffects		168
nim	tagEffects	ast.html#tagEffects	const tagEffects		169
nim	pragmasEffects	ast.html#pragmasEffects	const pragmasEffects		170
nim	forbiddenEffects	ast.html#forbiddenEffects	const forbiddenEffects		171
nim	effectListLen	ast.html#effectListLen	const effectListLen		172
nim	nkLastBlockStmts	ast.html#nkLastBlockStmts	const nkLastBlockStmts		173
nim	tyNone	ast.html#tyNone	TTypeKind.tyNone		177
nim	tyBool	ast.html#tyBool	TTypeKind.tyBool		177
nim	tyChar	ast.html#tyChar	TTypeKind.tyChar		177
nim	tyEmpty	ast.html#tyEmpty	TTypeKind.tyEmpty		177
nim	tyAlias	ast.html#tyAlias	TTypeKind.tyAlias		177
nim	tyNil	ast.html#tyNil	TTypeKind.tyNil		177
nim	tyUntyped	ast.html#tyUntyped	TTypeKind.tyUntyped		177
nim	tyTyped	ast.html#tyTyped	TTypeKind.tyTyped		177
nim	tyTypeDesc	ast.html#tyTypeDesc	TTypeKind.tyTypeDesc		177
nim	tyGenericInvocation	ast.html#tyGenericInvocation	TTypeKind.tyGenericInvocation		177
nim	tyGenericBody	ast.html#tyGenericBody	TTypeKind.tyGenericBody		177
nim	tyGenericInst	ast.html#tyGenericInst	TTypeKind.tyGenericInst		177
nim	tyGenericParam	ast.html#tyGenericParam	TTypeKind.tyGenericParam		177
nim	tyDistinct	ast.html#tyDistinct	TTypeKind.tyDistinct		177
nim	tyEnum	ast.html#tyEnum	TTypeKind.tyEnum		177
nim	tyOrdinal	ast.html#tyOrdinal	TTypeKind.tyOrdinal		177
nim	tyArray	ast.html#tyArray	TTypeKind.tyArray		177
nim	tyObject	ast.html#tyObject	TTypeKind.tyObject		177
nim	tyTuple	ast.html#tyTuple	TTypeKind.tyTuple		177
nim	tySet	ast.html#tySet	TTypeKind.tySet		177
nim	tyRange	ast.html#tyRange	TTypeKind.tyRange		177
nim	tyPtr	ast.html#tyPtr	TTypeKind.tyPtr		177
nim	tyRef	ast.html#tyRef	TTypeKind.tyRef		177
nim	tyVar	ast.html#tyVar	TTypeKind.tyVar		177
nim	tySequence	ast.html#tySequence	TTypeKind.tySequence		177
nim	tyProc	ast.html#tyProc	TTypeKind.tyProc		177
nim	tyPointer	ast.html#tyPointer	TTypeKind.tyPointer		177
nim	tyOpenArray	ast.html#tyOpenArray	TTypeKind.tyOpenArray		177
nim	tyString	ast.html#tyString	TTypeKind.tyString		177
nim	tyCstring	ast.html#tyCstring	TTypeKind.tyCstring		177
nim	tyForward	ast.html#tyForward	TTypeKind.tyForward		177
nim	tyInt	ast.html#tyInt	TTypeKind.tyInt		177
nim	tyInt8	ast.html#tyInt8	TTypeKind.tyInt8		177
nim	tyInt16	ast.html#tyInt16	TTypeKind.tyInt16		177
nim	tyInt32	ast.html#tyInt32	TTypeKind.tyInt32		177
nim	tyInt64	ast.html#tyInt64	TTypeKind.tyInt64		177
nim	tyFloat	ast.html#tyFloat	TTypeKind.tyFloat		177
nim	tyFloat32	ast.html#tyFloat32	TTypeKind.tyFloat32		177
nim	tyFloat64	ast.html#tyFloat64	TTypeKind.tyFloat64		177
nim	tyFloat128	ast.html#tyFloat128	TTypeKind.tyFloat128		177
nim	tyUInt	ast.html#tyUInt	TTypeKind.tyUInt		177
nim	tyUInt8	ast.html#tyUInt8	TTypeKind.tyUInt8		177
nim	tyUInt16	ast.html#tyUInt16	TTypeKind.tyUInt16		177
nim	tyUInt32	ast.html#tyUInt32	TTypeKind.tyUInt32		177
nim	tyUInt64	ast.html#tyUInt64	TTypeKind.tyUInt64		177
nim	tyOwned	ast.html#tyOwned	TTypeKind.tyOwned		177
nim	tySink	ast.html#tySink	TTypeKind.tySink		177
nim	tyLent	ast.html#tyLent	TTypeKind.tyLent		177
nim	tyVarargs	ast.html#tyVarargs	TTypeKind.tyVarargs		177
nim	tyUncheckedArray	ast.html#tyUncheckedArray	TTypeKind.tyUncheckedArray		177
nim	tyError	ast.html#tyError	TTypeKind.tyError		177
nim	tyBuiltInTypeClass	ast.html#tyBuiltInTypeClass	TTypeKind.tyBuiltInTypeClass		177
nim	tyUserTypeClass	ast.html#tyUserTypeClass	TTypeKind.tyUserTypeClass		177
nim	tyUserTypeClassInst	ast.html#tyUserTypeClassInst	TTypeKind.tyUserTypeClassInst		177
nim	tyCompositeTypeClass	ast.html#tyCompositeTypeClass	TTypeKind.tyCompositeTypeClass		177
nim	tyInferred	ast.html#tyInferred	TTypeKind.tyInferred		177
nim	tyAnd	ast.html#tyAnd	TTypeKind.tyAnd		177
nim	tyOr	ast.html#tyOr	TTypeKind.tyOr		177
nim	tyNot	ast.html#tyNot	TTypeKind.tyNot		177
nim	tyAnything	ast.html#tyAnything	TTypeKind.tyAnything		177
nim	tyStatic	ast.html#tyStatic	TTypeKind.tyStatic		177
nim	tyFromExpr	ast.html#tyFromExpr	TTypeKind.tyFromExpr		177
nim	tyConcept	ast.html#tyConcept	TTypeKind.tyConcept		177
nim	tyVoid	ast.html#tyVoid	TTypeKind.tyVoid		177
nim	tyIterable	ast.html#tyIterable	TTypeKind.tyIterable		177
nim	TTypeKind	ast.html#TTypeKind	enum TTypeKind		177
nim	tyPureObject	ast.html#tyPureObject	const tyPureObject		278
nim	GcTypeKinds	ast.html#GcTypeKinds	const GcTypeKinds		279
nim	tyTypeClasses	ast.html#tyTypeClasses	const tyTypeClasses		281
nim	tyMetaTypes	ast.html#tyMetaTypes	const tyMetaTypes		285
nim	tyUserTypeClasses	ast.html#tyUserTypeClasses	const tyUserTypeClasses		286
nim	abstractVarRange	ast.html#abstractVarRange	const abstractVarRange		288
nim	abstractInst	ast.html#abstractInst	const abstractInst		290
nim	TTypeKinds	ast.html#TTypeKinds	type TTypeKinds		294
nim	nfNone	ast.html#nfNone	TNodeFlag.nfNone		296
nim	nfBase2	ast.html#nfBase2	TNodeFlag.nfBase2		296
nim	nfBase8	ast.html#nfBase8	TNodeFlag.nfBase8		296
nim	nfBase16	ast.html#nfBase16	TNodeFlag.nfBase16		296
nim	nfAllConst	ast.html#nfAllConst	TNodeFlag.nfAllConst		296
nim	nfTransf	ast.html#nfTransf	TNodeFlag.nfTransf		296
nim	nfNoRewrite	ast.html#nfNoRewrite	TNodeFlag.nfNoRewrite		296
nim	nfSem	ast.html#nfSem	TNodeFlag.nfSem		296
nim	nfLL	ast.html#nfLL	TNodeFlag.nfLL		296
nim	nfDotField	ast.html#nfDotField	TNodeFlag.nfDotField		296
nim	nfDotSetter	ast.html#nfDotSetter	TNodeFlag.nfDotSetter		296
nim	nfExplicitCall	ast.html#nfExplicitCall	TNodeFlag.nfExplicitCall		296
nim	nfExprCall	ast.html#nfExprCall	TNodeFlag.nfExprCall		296
nim	nfIsRef	ast.html#nfIsRef	TNodeFlag.nfIsRef		296
nim	nfIsPtr	ast.html#nfIsPtr	TNodeFlag.nfIsPtr		296
nim	nfPreventCg	ast.html#nfPreventCg	TNodeFlag.nfPreventCg		296
nim	nfBlockArg	ast.html#nfBlockArg	TNodeFlag.nfBlockArg		296
nim	nfFromTemplate	ast.html#nfFromTemplate	TNodeFlag.nfFromTemplate		296
nim	nfDefaultParam	ast.html#nfDefaultParam	TNodeFlag.nfDefaultParam		296
nim	nfDefaultRefsParam	ast.html#nfDefaultRefsParam	TNodeFlag.nfDefaultRefsParam		296
nim	nfExecuteOnReload	ast.html#nfExecuteOnReload	TNodeFlag.nfExecuteOnReload		296
nim	nfLastRead	ast.html#nfLastRead	TNodeFlag.nfLastRead		296
nim	nfFirstWrite	ast.html#nfFirstWrite	TNodeFlag.nfFirstWrite		296
nim	nfHasComment	ast.html#nfHasComment	TNodeFlag.nfHasComment		296
nim	nfSkipFieldChecking	ast.html#nfSkipFieldChecking	TNodeFlag.nfSkipFieldChecking		296
nim	nfDisabledOpenSym	ast.html#nfDisabledOpenSym	TNodeFlag.nfDisabledOpenSym		296
nim	TNodeFlag	ast.html#TNodeFlag	enum TNodeFlag		296
nim	TNodeFlags	ast.html#TNodeFlags	type TNodeFlags		329
nim	tfVarargs	ast.html#tfVarargs	TTypeFlag.tfVarargs		330
nim	tfNoSideEffect	ast.html#tfNoSideEffect	TTypeFlag.tfNoSideEffect		330
nim	tfFinal	ast.html#tfFinal	TTypeFlag.tfFinal		330
nim	tfInheritable	ast.html#tfInheritable	TTypeFlag.tfInheritable		330
nim	tfHasOwned	ast.html#tfHasOwned	TTypeFlag.tfHasOwned		330
nim	tfEnumHasHoles	ast.html#tfEnumHasHoles	TTypeFlag.tfEnumHasHoles		330
nim	tfShallow	ast.html#tfShallow	TTypeFlag.tfShallow		330
nim	tfThread	ast.html#tfThread	TTypeFlag.tfThread		330
nim	tfFromGeneric	ast.html#tfFromGeneric	TTypeFlag.tfFromGeneric		330
nim	tfUnresolved	ast.html#tfUnresolved	TTypeFlag.tfUnresolved		330
nim	tfResolved	ast.html#tfResolved	TTypeFlag.tfResolved		330
nim	tfRetType	ast.html#tfRetType	TTypeFlag.tfRetType		330
nim	tfCapturesEnv	ast.html#tfCapturesEnv	TTypeFlag.tfCapturesEnv		330
nim	tfByCopy	ast.html#tfByCopy	TTypeFlag.tfByCopy		330
nim	tfByRef	ast.html#tfByRef	TTypeFlag.tfByRef		330
nim	tfIterator	ast.html#tfIterator	TTypeFlag.tfIterator		330
nim	tfPartial	ast.html#tfPartial	TTypeFlag.tfPartial		330
nim	tfNotNil	ast.html#tfNotNil	TTypeFlag.tfNotNil		330
nim	tfRequiresInit	ast.html#tfRequiresInit	TTypeFlag.tfRequiresInit		330
nim	tfNeedsFullInit	ast.html#tfNeedsFullInit	TTypeFlag.tfNeedsFullInit		330
nim	tfVarIsPtr	ast.html#tfVarIsPtr	TTypeFlag.tfVarIsPtr		330
nim	tfHasMeta	ast.html#tfHasMeta	TTypeFlag.tfHasMeta		330
nim	tfHasGCedMem	ast.html#tfHasGCedMem	TTypeFlag.tfHasGCedMem		330
nim	tfPacked	ast.html#tfPacked	TTypeFlag.tfPacked		330
nim	tfHasStatic	ast.html#tfHasStatic	TTypeFlag.tfHasStatic		330
nim	tfGenericTypeParam	ast.html#tfGenericTypeParam	TTypeFlag.tfGenericTypeParam		330
nim	tfImplicitTypeParam	ast.html#tfImplicitTypeParam	TTypeFlag.tfImplicitTypeParam		330
nim	tfInferrableStatic	ast.html#tfInferrableStatic	TTypeFlag.tfInferrableStatic		330
nim	tfConceptMatchedTypeSym	ast.html#tfConceptMatchedTypeSym	TTypeFlag.tfConceptMatchedTypeSym		330
nim	tfExplicit	ast.html#tfExplicit	TTypeFlag.tfExplicit		330
nim	tfWildcard	ast.html#tfWildcard	TTypeFlag.tfWildcard		330
nim	tfHasAsgn	ast.html#tfHasAsgn	TTypeFlag.tfHasAsgn		330
nim	tfBorrowDot	ast.html#tfBorrowDot	TTypeFlag.tfBorrowDot		330
nim	tfTriggersCompileTime	ast.html#tfTriggersCompileTime	TTypeFlag.tfTriggersCompileTime		330
nim	tfRefsAnonObj	ast.html#tfRefsAnonObj	TTypeFlag.tfRefsAnonObj		330
nim	tfCovariant	ast.html#tfCovariant	TTypeFlag.tfCovariant		330
nim	tfWeakCovariant	ast.html#tfWeakCovariant	TTypeFlag.tfWeakCovariant		330
nim	tfContravariant	ast.html#tfContravariant	TTypeFlag.tfContravariant		330
nim	tfCheckedForDestructor	ast.html#tfCheckedForDestructor	TTypeFlag.tfCheckedForDestructor		330
nim	tfAcyclic	ast.html#tfAcyclic	TTypeFlag.tfAcyclic		330
nim	tfIncompleteStruct	ast.html#tfIncompleteStruct	TTypeFlag.tfIncompleteStruct		330
nim	tfCompleteStruct	ast.html#tfCompleteStruct	TTypeFlag.tfCompleteStruct		330
nim	tfExplicitCallConv	ast.html#tfExplicitCallConv	TTypeFlag.tfExplicitCallConv		330
nim	tfIsConstructor	ast.html#tfIsConstructor	TTypeFlag.tfIsConstructor		330
nim	tfEffectSystemWorkaround	ast.html#tfEffectSystemWorkaround	TTypeFlag.tfEffectSystemWorkaround		330
nim	tfIsOutParam	ast.html#tfIsOutParam	TTypeFlag.tfIsOutParam		330
nim	tfSendable	ast.html#tfSendable	TTypeFlag.tfSendable		330
nim	tfImplicitStatic	ast.html#tfImplicitStatic	TTypeFlag.tfImplicitStatic		330
nim	TTypeFlag	ast.html#TTypeFlag	enum TTypeFlag		330
nim	TTypeFlags	ast.html#TTypeFlags	type TTypeFlags		403
nim	skUnknown	ast.html#skUnknown	TSymKind.skUnknown		405
nim	skConditional	ast.html#skConditional	TSymKind.skConditional		405
nim	skDynLib	ast.html#skDynLib	TSymKind.skDynLib		405
nim	skParam	ast.html#skParam	TSymKind.skParam		405
nim	skGenericParam	ast.html#skGenericParam	TSymKind.skGenericParam		405
nim	skTemp	ast.html#skTemp	TSymKind.skTemp		405
nim	skModule	ast.html#skModule	TSymKind.skModule		405
nim	skType	ast.html#skType	TSymKind.skType		405
nim	skVar	ast.html#skVar	TSymKind.skVar		405
nim	skLet	ast.html#skLet	TSymKind.skLet		405
nim	skConst	ast.html#skConst	TSymKind.skConst		405
nim	skResult	ast.html#skResult	TSymKind.skResult		405
nim	skProc	ast.html#skProc	TSymKind.skProc		405
nim	skFunc	ast.html#skFunc	TSymKind.skFunc		405
nim	skMethod	ast.html#skMethod	TSymKind.skMethod		405
nim	skIterator	ast.html#skIterator	TSymKind.skIterator		405
nim	skConverter	ast.html#skConverter	TSymKind.skConverter		405
nim	skMacro	ast.html#skMacro	TSymKind.skMacro		405
nim	skTemplate	ast.html#skTemplate	TSymKind.skTemplate		405
nim	skField	ast.html#skField	TSymKind.skField		405
nim	skEnumField	ast.html#skEnumField	TSymKind.skEnumField		405
nim	skForVar	ast.html#skForVar	TSymKind.skForVar		405
nim	skLabel	ast.html#skLabel	TSymKind.skLabel		405
nim	skStub	ast.html#skStub	TSymKind.skStub		405
nim	skPackage	ast.html#skPackage	TSymKind.skPackage		405
nim	TSymKind	ast.html#TSymKind	enum TSymKind		405
nim	TSymKinds	ast.html#TSymKinds	type TSymKinds		437
nim	routineKinds	ast.html#routineKinds	const routineKinds		440
nim	ExportableSymKinds	ast.html#ExportableSymKinds	const ExportableSymKinds		442
nim	tfUnion	ast.html#tfUnion	const tfUnion		444
nim	tfGcSafe	ast.html#tfGcSafe	const tfGcSafe		445
nim	tfObjHasKids	ast.html#tfObjHasKids	const tfObjHasKids		446
nim	tfReturnsNew	ast.html#tfReturnsNew	const tfReturnsNew		447
nim	tfNonConstExpr	ast.html#tfNonConstExpr	const tfNonConstExpr		448
nim	skError	ast.html#skError	const skError		450
nim	eqTypeFlags	ast.html#eqTypeFlags	var eqTypeFlags		453
nim	mNone	ast.html#mNone	TMagic.mNone		459
nim	mDefined	ast.html#mDefined	TMagic.mDefined		459
nim	mDeclared	ast.html#mDeclared	TMagic.mDeclared		459
nim	mDeclaredInScope	ast.html#mDeclaredInScope	TMagic.mDeclaredInScope		459
nim	mCompiles	ast.html#mCompiles	TMagic.mCompiles		459
nim	mArrGet	ast.html#mArrGet	TMagic.mArrGet		459
nim	mArrPut	ast.html#mArrPut	TMagic.mArrPut		459
nim	mAsgn	ast.html#mAsgn	TMagic.mAsgn		459
nim	mLow	ast.html#mLow	TMagic.mLow		459
nim	mHigh	ast.html#mHigh	TMagic.mHigh		459
nim	mSizeOf	ast.html#mSizeOf	TMagic.mSizeOf		459
nim	mAlignOf	ast.html#mAlignOf	TMagic.mAlignOf		459
nim	mOffsetOf	ast.html#mOffsetOf	TMagic.mOffsetOf		459
nim	mTypeTrait	ast.html#mTypeTrait	TMagic.mTypeTrait		459
nim	mIs	ast.html#mIs	TMagic.mIs		459
nim	mOf	ast.html#mOf	TMagic.mOf		459
nim	mAddr	ast.html#mAddr	TMagic.mAddr		459
nim	mType	ast.html#mType	TMagic.mType		459
nim	mTypeOf	ast.html#mTypeOf	TMagic.mTypeOf		459
nim	mPlugin	ast.html#mPlugin	TMagic.mPlugin		459
nim	mEcho	ast.html#mEcho	TMagic.mEcho		459
nim	mShallowCopy	ast.html#mShallowCopy	TMagic.mShallowCopy		459
nim	mSlurp	ast.html#mSlurp	TMagic.mSlurp		459
nim	mStaticExec	ast.html#mStaticExec	TMagic.mStaticExec		459
nim	mStatic	ast.html#mStatic	TMagic.mStatic		459
nim	mParseExprToAst	ast.html#mParseExprToAst	TMagic.mParseExprToAst		459
nim	mParseStmtToAst	ast.html#mParseStmtToAst	TMagic.mParseStmtToAst		459
nim	mExpandToAst	ast.html#mExpandToAst	TMagic.mExpandToAst		459
nim	mQuoteAst	ast.html#mQuoteAst	TMagic.mQuoteAst		459
nim	mInc	ast.html#mInc	TMagic.mInc		459
nim	mDec	ast.html#mDec	TMagic.mDec		459
nim	mOrd	ast.html#mOrd	TMagic.mOrd		459
nim	mNew	ast.html#mNew	TMagic.mNew		459
nim	mNewFinalize	ast.html#mNewFinalize	TMagic.mNewFinalize		459
nim	mNewSeq	ast.html#mNewSeq	TMagic.mNewSeq		459
nim	mNewSeqOfCap	ast.html#mNewSeqOfCap	TMagic.mNewSeqOfCap		459
nim	mLengthOpenArray	ast.html#mLengthOpenArray	TMagic.mLengthOpenArray		459
nim	mLengthStr	ast.html#mLengthStr	TMagic.mLengthStr		459
nim	mLengthArray	ast.html#mLengthArray	TMagic.mLengthArray		459
nim	mLengthSeq	ast.html#mLengthSeq	TMagic.mLengthSeq		459
nim	mIncl	ast.html#mIncl	TMagic.mIncl		459
nim	mExcl	ast.html#mExcl	TMagic.mExcl		459
nim	mCard	ast.html#mCard	TMagic.mCard		459
nim	mChr	ast.html#mChr	TMagic.mChr		459
nim	mGCref	ast.html#mGCref	TMagic.mGCref		459
nim	mGCunref	ast.html#mGCunref	TMagic.mGCunref		459
nim	mAddI	ast.html#mAddI	TMagic.mAddI		459
nim	mSubI	ast.html#mSubI	TMagic.mSubI		459
nim	mMulI	ast.html#mMulI	TMagic.mMulI		459
nim	mDivI	ast.html#mDivI	TMagic.mDivI		459
nim	mModI	ast.html#mModI	TMagic.mModI		459
nim	mSucc	ast.html#mSucc	TMagic.mSucc		459
nim	mPred	ast.html#mPred	TMagic.mPred		459
nim	mAddF64	ast.html#mAddF64	TMagic.mAddF64		459
nim	mSubF64	ast.html#mSubF64	TMagic.mSubF64		459
nim	mMulF64	ast.html#mMulF64	TMagic.mMulF64		459
nim	mDivF64	ast.html#mDivF64	TMagic.mDivF64		459
nim	mShrI	ast.html#mShrI	TMagic.mShrI		459
nim	mShlI	ast.html#mShlI	TMagic.mShlI		459
nim	mAshrI	ast.html#mAshrI	TMagic.mAshrI		459
nim	mBitandI	ast.html#mBitandI	TMagic.mBitandI		459
nim	mBitorI	ast.html#mBitorI	TMagic.mBitorI		459
nim	mBitxorI	ast.html#mBitxorI	TMagic.mBitxorI		459
nim	mMinI	ast.html#mMinI	TMagic.mMinI		459
nim	mMaxI	ast.html#mMaxI	TMagic.mMaxI		459
nim	mAddU	ast.html#mAddU	TMagic.mAddU		459
nim	mSubU	ast.html#mSubU	TMagic.mSubU		459
nim	mMulU	ast.html#mMulU	TMagic.mMulU		459
nim	mDivU	ast.html#mDivU	TMagic.mDivU		459
nim	mModU	ast.html#mModU	TMagic.mModU		459
nim	mEqI	ast.html#mEqI	TMagic.mEqI		459
nim	mLeI	ast.html#mLeI	TMagic.mLeI		459
nim	mLtI	ast.html#mLtI	TMagic.mLtI		459
nim	mEqF64	ast.html#mEqF64	TMagic.mEqF64		459
nim	mLeF64	ast.html#mLeF64	TMagic.mLeF64		459
nim	mLtF64	ast.html#mLtF64	TMagic.mLtF64		459
nim	mLeU	ast.html#mLeU	TMagic.mLeU		459
nim	mLtU	ast.html#mLtU	TMagic.mLtU		459
nim	mEqEnum	ast.html#mEqEnum	TMagic.mEqEnum		459
nim	mLeEnum	ast.html#mLeEnum	TMagic.mLeEnum		459
nim	mLtEnum	ast.html#mLtEnum	TMagic.mLtEnum		459
nim	mEqCh	ast.html#mEqCh	TMagic.mEqCh		459
nim	mLeCh	ast.html#mLeCh	TMagic.mLeCh		459
nim	mLtCh	ast.html#mLtCh	TMagic.mLtCh		459
nim	mEqB	ast.html#mEqB	TMagic.mEqB		459
nim	mLeB	ast.html#mLeB	TMagic.mLeB		459
nim	mLtB	ast.html#mLtB	TMagic.mLtB		459
nim	mEqRef	ast.html#mEqRef	TMagic.mEqRef		459
nim	mLePtr	ast.html#mLePtr	TMagic.mLePtr		459
nim	mLtPtr	ast.html#mLtPtr	TMagic.mLtPtr		459
nim	mXor	ast.html#mXor	TMagic.mXor		459
nim	mEqCString	ast.html#mEqCString	TMagic.mEqCString		459
nim	mEqProc	ast.html#mEqProc	TMagic.mEqProc		459
nim	mUnaryMinusI	ast.html#mUnaryMinusI	TMagic.mUnaryMinusI		459
nim	mUnaryMinusI64	ast.html#mUnaryMinusI64	TMagic.mUnaryMinusI64		459
nim	mAbsI	ast.html#mAbsI	TMagic.mAbsI		459
nim	mNot	ast.html#mNot	TMagic.mNot		459
nim	mUnaryPlusI	ast.html#mUnaryPlusI	TMagic.mUnaryPlusI		459
nim	mBitnotI	ast.html#mBitnotI	TMagic.mBitnotI		459
nim	mUnaryPlusF64	ast.html#mUnaryPlusF64	TMagic.mUnaryPlusF64		459
nim	mUnaryMinusF64	ast.html#mUnaryMinusF64	TMagic.mUnaryMinusF64		459
nim	mCharToStr	ast.html#mCharToStr	TMagic.mCharToStr		459
nim	mBoolToStr	ast.html#mBoolToStr	TMagic.mBoolToStr		459
nim	mCStrToStr	ast.html#mCStrToStr	TMagic.mCStrToStr		459
nim	mStrToStr	ast.html#mStrToStr	TMagic.mStrToStr		459
nim	mEnumToStr	ast.html#mEnumToStr	TMagic.mEnumToStr		459
nim	mAnd	ast.html#mAnd	TMagic.mAnd		459
nim	mOr	ast.html#mOr	TMagic.mOr		459
nim	mImplies	ast.html#mImplies	TMagic.mImplies		459
nim	mIff	ast.html#mIff	TMagic.mIff		459
nim	mExists	ast.html#mExists	TMagic.mExists		459
nim	mForall	ast.html#mForall	TMagic.mForall		459
nim	mOld	ast.html#mOld	TMagic.mOld		459
nim	mEqStr	ast.html#mEqStr	TMagic.mEqStr		459
nim	mLeStr	ast.html#mLeStr	TMagic.mLeStr		459
nim	mLtStr	ast.html#mLtStr	TMagic.mLtStr		459
nim	mEqSet	ast.html#mEqSet	TMagic.mEqSet		459
nim	mLeSet	ast.html#mLeSet	TMagic.mLeSet		459
nim	mLtSet	ast.html#mLtSet	TMagic.mLtSet		459
nim	mMulSet	ast.html#mMulSet	TMagic.mMulSet		459
nim	mPlusSet	ast.html#mPlusSet	TMagic.mPlusSet		459
nim	mMinusSet	ast.html#mMinusSet	TMagic.mMinusSet		459
nim	mXorSet	ast.html#mXorSet	TMagic.mXorSet		459
nim	mConStrStr	ast.html#mConStrStr	TMagic.mConStrStr		459
nim	mSlice	ast.html#mSlice	TMagic.mSlice		459
nim	mDotDot	ast.html#mDotDot	TMagic.mDotDot		459
nim	mFields	ast.html#mFields	TMagic.mFields		459
nim	mFieldPairs	ast.html#mFieldPairs	TMagic.mFieldPairs		459
nim	mOmpParFor	ast.html#mOmpParFor	TMagic.mOmpParFor		459
nim	mAppendStrCh	ast.html#mAppendStrCh	TMagic.mAppendStrCh		459
nim	mAppendStrStr	ast.html#mAppendStrStr	TMagic.mAppendStrStr		459
nim	mAppendSeqElem	ast.html#mAppendSeqElem	TMagic.mAppendSeqElem		459
nim	mInSet	ast.html#mInSet	TMagic.mInSet		459
nim	mRepr	ast.html#mRepr	TMagic.mRepr		459
nim	mExit	ast.html#mExit	TMagic.mExit		459
nim	mSetLengthStr	ast.html#mSetLengthStr	TMagic.mSetLengthStr		459
nim	mSetLengthSeq	ast.html#mSetLengthSeq	TMagic.mSetLengthSeq		459
nim	mIsPartOf	ast.html#mIsPartOf	TMagic.mIsPartOf		459
nim	mAstToStr	ast.html#mAstToStr	TMagic.mAstToStr		459
nim	mParallel	ast.html#mParallel	TMagic.mParallel		459
nim	mSwap	ast.html#mSwap	TMagic.mSwap		459
nim	mIsNil	ast.html#mIsNil	TMagic.mIsNil		459
nim	mArrToSeq	ast.html#mArrToSeq	TMagic.mArrToSeq		459
nim	mOpenArrayToSeq	ast.html#mOpenArrayToSeq	TMagic.mOpenArrayToSeq		459
nim	mNewString	ast.html#mNewString	TMagic.mNewString		459
nim	mNewStringOfCap	ast.html#mNewStringOfCap	TMagic.mNewStringOfCap		459
nim	mParseBiggestFloat	ast.html#mParseBiggestFloat	TMagic.mParseBiggestFloat		459
nim	mMove	ast.html#mMove	TMagic.mMove		459
nim	mEnsureMove	ast.html#mEnsureMove	TMagic.mEnsureMove		459
nim	mWasMoved	ast.html#mWasMoved	TMagic.mWasMoved		459
nim	mDup	ast.html#mDup	TMagic.mDup		459
nim	mDestroy	ast.html#mDestroy	TMagic.mDestroy		459
nim	mTrace	ast.html#mTrace	TMagic.mTrace		459
nim	mDefault	ast.html#mDefault	TMagic.mDefault		459
nim	mUnown	ast.html#mUnown	TMagic.mUnown		459
nim	mFinished	ast.html#mFinished	TMagic.mFinished		459
nim	mIsolate	ast.html#mIsolate	TMagic.mIsolate		459
nim	mAccessEnv	ast.html#mAccessEnv	TMagic.mAccessEnv		459
nim	mAccessTypeField	ast.html#mAccessTypeField	TMagic.mAccessTypeField		459
nim	mArray	ast.html#mArray	TMagic.mArray		459
nim	mOpenArray	ast.html#mOpenArray	TMagic.mOpenArray		459
nim	mRange	ast.html#mRange	TMagic.mRange		459
nim	mSet	ast.html#mSet	TMagic.mSet		459
nim	mSeq	ast.html#mSeq	TMagic.mSeq		459
nim	mVarargs	ast.html#mVarargs	TMagic.mVarargs		459
nim	mRef	ast.html#mRef	TMagic.mRef		459
nim	mPtr	ast.html#mPtr	TMagic.mPtr		459
nim	mVar	ast.html#mVar	TMagic.mVar		459
nim	mDistinct	ast.html#mDistinct	TMagic.mDistinct		459
nim	mVoid	ast.html#mVoid	TMagic.mVoid		459
nim	mTuple	ast.html#mTuple	TMagic.mTuple		459
nim	mOrdinal	ast.html#mOrdinal	TMagic.mOrdinal		459
nim	mIterableType	ast.html#mIterableType	TMagic.mIterableType		459
nim	mInt	ast.html#mInt	TMagic.mInt		459
nim	mInt8	ast.html#mInt8	TMagic.mInt8		459
nim	mInt16	ast.html#mInt16	TMagic.mInt16		459
nim	mInt32	ast.html#mInt32	TMagic.mInt32		459
nim	mInt64	ast.html#mInt64	TMagic.mInt64		459
nim	mUInt	ast.html#mUInt	TMagic.mUInt		459
nim	mUInt8	ast.html#mUInt8	TMagic.mUInt8		459
nim	mUInt16	ast.html#mUInt16	TMagic.mUInt16		459
nim	mUInt32	ast.html#mUInt32	TMagic.mUInt32		459
nim	mUInt64	ast.html#mUInt64	TMagic.mUInt64		459
nim	mFloat	ast.html#mFloat	TMagic.mFloat		459
nim	mFloat32	ast.html#mFloat32	TMagic.mFloat32		459
nim	mFloat64	ast.html#mFloat64	TMagic.mFloat64		459
nim	mFloat128	ast.html#mFloat128	TMagic.mFloat128		459
nim	mBool	ast.html#mBool	TMagic.mBool		459
nim	mChar	ast.html#mChar	TMagic.mChar		459
nim	mString	ast.html#mString	TMagic.mString		459
nim	mCstring	ast.html#mCstring	TMagic.mCstring		459
nim	mPointer	ast.html#mPointer	TMagic.mPointer		459
nim	mNil	ast.html#mNil	TMagic.mNil		459
nim	mExpr	ast.html#mExpr	TMagic.mExpr		459
nim	mStmt	ast.html#mStmt	TMagic.mStmt		459
nim	mTypeDesc	ast.html#mTypeDesc	TMagic.mTypeDesc		459
nim	mVoidType	ast.html#mVoidType	TMagic.mVoidType		459
nim	mPNimrodNode	ast.html#mPNimrodNode	TMagic.mPNimrodNode		459
nim	mSpawn	ast.html#mSpawn	TMagic.mSpawn		459
nim	mDeepCopy	ast.html#mDeepCopy	TMagic.mDeepCopy		459
nim	mIsMainModule	ast.html#mIsMainModule	TMagic.mIsMainModule		459
nim	mCompileDate	ast.html#mCompileDate	TMagic.mCompileDate		459
nim	mCompileTime	ast.html#mCompileTime	TMagic.mCompileTime		459
nim	mProcCall	ast.html#mProcCall	TMagic.mProcCall		459
nim	mCpuEndian	ast.html#mCpuEndian	TMagic.mCpuEndian		459
nim	mHostOS	ast.html#mHostOS	TMagic.mHostOS		459
nim	mHostCPU	ast.html#mHostCPU	TMagic.mHostCPU		459
nim	mBuildOS	ast.html#mBuildOS	TMagic.mBuildOS		459
nim	mBuildCPU	ast.html#mBuildCPU	TMagic.mBuildCPU		459
nim	mAppType	ast.html#mAppType	TMagic.mAppType		459
nim	mCompileOption	ast.html#mCompileOption	TMagic.mCompileOption		459
nim	mCompileOptionArg	ast.html#mCompileOptionArg	TMagic.mCompileOptionArg		459
nim	mNLen	ast.html#mNLen	TMagic.mNLen		459
nim	mNChild	ast.html#mNChild	TMagic.mNChild		459
nim	mNSetChild	ast.html#mNSetChild	TMagic.mNSetChild		459
nim	mNAdd	ast.html#mNAdd	TMagic.mNAdd		459
nim	mNAddMultiple	ast.html#mNAddMultiple	TMagic.mNAddMultiple		459
nim	mNDel	ast.html#mNDel	TMagic.mNDel		459
nim	mNKind	ast.html#mNKind	TMagic.mNKind		459
nim	mNSymKind	ast.html#mNSymKind	TMagic.mNSymKind		459
nim	mNccValue	ast.html#mNccValue	TMagic.mNccValue		459
nim	mNccInc	ast.html#mNccInc	TMagic.mNccInc		459
nim	mNcsAdd	ast.html#mNcsAdd	TMagic.mNcsAdd		459
nim	mNcsIncl	ast.html#mNcsIncl	TMagic.mNcsIncl		459
nim	mNcsLen	ast.html#mNcsLen	TMagic.mNcsLen		459
nim	mNcsAt	ast.html#mNcsAt	TMagic.mNcsAt		459
nim	mNctPut	ast.html#mNctPut	TMagic.mNctPut		459
nim	mNctLen	ast.html#mNctLen	TMagic.mNctLen		459
nim	mNctGet	ast.html#mNctGet	TMagic.mNctGet		459
nim	mNctHasNext	ast.html#mNctHasNext	TMagic.mNctHasNext		459
nim	mNctNext	ast.html#mNctNext	TMagic.mNctNext		459
nim	mNIntVal	ast.html#mNIntVal	TMagic.mNIntVal		459
nim	mNFloatVal	ast.html#mNFloatVal	TMagic.mNFloatVal		459
nim	mNSymbol	ast.html#mNSymbol	TMagic.mNSymbol		459
nim	mNIdent	ast.html#mNIdent	TMagic.mNIdent		459
nim	mNGetType	ast.html#mNGetType	TMagic.mNGetType		459
nim	mNStrVal	ast.html#mNStrVal	TMagic.mNStrVal		459
nim	mNSetIntVal	ast.html#mNSetIntVal	TMagic.mNSetIntVal		459
nim	mNSetFloatVal	ast.html#mNSetFloatVal	TMagic.mNSetFloatVal		459
nim	mNSetSymbol	ast.html#mNSetSymbol	TMagic.mNSetSymbol		459
nim	mNSetIdent	ast.html#mNSetIdent	TMagic.mNSetIdent		459
nim	mNSetStrVal	ast.html#mNSetStrVal	TMagic.mNSetStrVal		459
nim	mNLineInfo	ast.html#mNLineInfo	TMagic.mNLineInfo		459
nim	mNNewNimNode	ast.html#mNNewNimNode	TMagic.mNNewNimNode		459
nim	mNCopyNimNode	ast.html#mNCopyNimNode	TMagic.mNCopyNimNode		459
nim	mNCopyNimTree	ast.html#mNCopyNimTree	TMagic.mNCopyNimTree		459
nim	mStrToIdent	ast.html#mStrToIdent	TMagic.mStrToIdent		459
nim	mNSigHash	ast.html#mNSigHash	TMagic.mNSigHash		459
nim	mNSizeOf	ast.html#mNSizeOf	TMagic.mNSizeOf		459
nim	mNBindSym	ast.html#mNBindSym	TMagic.mNBindSym		459
nim	mNCallSite	ast.html#mNCallSite	TMagic.mNCallSite		459
nim	mEqIdent	ast.html#mEqIdent	TMagic.mEqIdent		459
nim	mEqNimrodNode	ast.html#mEqNimrodNode	TMagic.mEqNimrodNode		459
nim	mSameNodeType	ast.html#mSameNodeType	TMagic.mSameNodeType		459
nim	mGetImpl	ast.html#mGetImpl	TMagic.mGetImpl		459
nim	mNGenSym	ast.html#mNGenSym	TMagic.mNGenSym		459
nim	mNHint	ast.html#mNHint	TMagic.mNHint		459
nim	mNWarning	ast.html#mNWarning	TMagic.mNWarning		459
nim	mNError	ast.html#mNError	TMagic.mNError		459
nim	mInstantiationInfo	ast.html#mInstantiationInfo	TMagic.mInstantiationInfo		459
nim	mGetTypeInfo	ast.html#mGetTypeInfo	TMagic.mGetTypeInfo		459
nim	mGetTypeInfoV2	ast.html#mGetTypeInfoV2	TMagic.mGetTypeInfoV2		459
nim	mNimvm	ast.html#mNimvm	TMagic.mNimvm		459
nim	mIntDefine	ast.html#mIntDefine	TMagic.mIntDefine		459
nim	mStrDefine	ast.html#mStrDefine	TMagic.mStrDefine		459
nim	mBoolDefine	ast.html#mBoolDefine	TMagic.mBoolDefine		459
nim	mGenericDefine	ast.html#mGenericDefine	TMagic.mGenericDefine		459
nim	mRunnableExamples	ast.html#mRunnableExamples	TMagic.mRunnableExamples		459
nim	mException	ast.html#mException	TMagic.mException		459
nim	mBuiltinType	ast.html#mBuiltinType	TMagic.mBuiltinType		459
nim	mSymOwner	ast.html#mSymOwner	TMagic.mSymOwner		459
nim	mUncheckedArray	ast.html#mUncheckedArray	TMagic.mUncheckedArray		459
nim	mGetImplTransf	ast.html#mGetImplTransf	TMagic.mGetImplTransf		459
nim	mSymIsInstantiationOf	ast.html#mSymIsInstantiationOf	TMagic.mSymIsInstantiationOf		459
nim	mNodeId	ast.html#mNodeId	TMagic.mNodeId		459
nim	mPrivateAccess	ast.html#mPrivateAccess	TMagic.mPrivateAccess		459
nim	mZeroDefault	ast.html#mZeroDefault	TMagic.mZeroDefault		459
nim	TMagic	ast.html#TMagic	enum TMagic		459
nim	ctfeWhitelist	ast.html#ctfeWhitelist	const ctfeWhitelist		538
nim	generatedMagics	ast.html#generatedMagics	const generatedMagics		566
nim	ItemId	ast.html#ItemId	object ItemId		570
nim	`$`	ast.html#$,ItemId	proc `$`(x: ItemId): string		574
nim	`==`	ast.html#==,ItemId,ItemId	proc `==`(a, b: ItemId): bool		577
nim	hash	ast.html#hash,ItemId	proc hash(x: ItemId): Hash		580
nim	PNode	ast.html#PNode	type PNode		587
nim	TNodeSeq	ast.html#TNodeSeq	type TNodeSeq		588
nim	PType	ast.html#PType	type PType		589
nim	PSym	ast.html#PSym	type PSym		590
nim	TNode	ast.html#TNode	object TNode		591
nim	TStrTable	ast.html#TStrTable	object TStrTable		613
nim	locNone	ast.html#locNone	TLocKind.locNone		618
nim	locTemp	ast.html#locTemp	TLocKind.locTemp		618
nim	locLocalVar	ast.html#locLocalVar	TLocKind.locLocalVar		618
nim	locGlobalVar	ast.html#locGlobalVar	TLocKind.locGlobalVar		618
nim	locParam	ast.html#locParam	TLocKind.locParam		618
nim	locField	ast.html#locField	TLocKind.locField		618
nim	locExpr	ast.html#locExpr	TLocKind.locExpr		618
nim	locProc	ast.html#locProc	TLocKind.locProc		618
nim	locData	ast.html#locData	TLocKind.locData		618
nim	locCall	ast.html#locCall	TLocKind.locCall		618
nim	locOther	ast.html#locOther	TLocKind.locOther		618
nim	TLocKind	ast.html#TLocKind	enum TLocKind		618
nim	lfIndirect	ast.html#lfIndirect	TLocFlag.lfIndirect		630
nim	lfNoDeepCopy	ast.html#lfNoDeepCopy	TLocFlag.lfNoDeepCopy		630
nim	lfNoDecl	ast.html#lfNoDecl	TLocFlag.lfNoDecl		630
nim	lfDynamicLib	ast.html#lfDynamicLib	TLocFlag.lfDynamicLib		630
nim	lfExportLib	ast.html#lfExportLib	TLocFlag.lfExportLib		630
nim	lfHeader	ast.html#lfHeader	TLocFlag.lfHeader		630
nim	lfImportCompilerProc	ast.html#lfImportCompilerProc	TLocFlag.lfImportCompilerProc		630
nim	lfSingleUse	ast.html#lfSingleUse	TLocFlag.lfSingleUse		630
nim	lfEnforceDeref	ast.html#lfEnforceDeref	TLocFlag.lfEnforceDeref		630
nim	lfPrepareForMutation	ast.html#lfPrepareForMutation	TLocFlag.lfPrepareForMutation		630
nim	TLocFlag	ast.html#TLocFlag	enum TLocFlag		630
nim	OnUnknown	ast.html#OnUnknown	TStorageLoc.OnUnknown		643
nim	OnStatic	ast.html#OnStatic	TStorageLoc.OnStatic		643
nim	OnStack	ast.html#OnStack	TStorageLoc.OnStack		643
nim	OnHeap	ast.html#OnHeap	TStorageLoc.OnHeap		643
nim	TStorageLoc	ast.html#TStorageLoc	enum TStorageLoc		643
nim	TLocFlags	ast.html#TLocFlags	type TLocFlags		649
nim	TLoc	ast.html#TLoc	object TLoc		650
nim	libHeader	ast.html#libHeader	TLibKind.libHeader		659
nim	libDynamic	ast.html#libDynamic	TLibKind.libDynamic		659
nim	TLibKind	ast.html#TLibKind	enum TLibKind		659
nim	TLib	ast.html#TLib	object TLib		662
nim	CompilesId	ast.html#CompilesId	type CompilesId		671
nim	TInstantiation	ast.html#TInstantiation	object TInstantiation		673
nim	PInstantiation	ast.html#PInstantiation	type PInstantiation		678
nim	TScope	ast.html#TScope	object TScope		680
nim	PScope	ast.html#PScope	type PScope		686
nim	PLib	ast.html#PLib	type PLib		688
nim	TSym	ast.html#TSym	object TSym		689
nim	TTypeSeq	ast.html#TTypeSeq	type TTypeSeq		748
nim	attachedWasMoved	ast.html#attachedWasMoved	TTypeAttachedOp.attachedWasMoved		750
nim	attachedDestructor	ast.html#attachedDestructor	TTypeAttachedOp.attachedDestructor		750
nim	attachedAsgn	ast.html#attachedAsgn	TTypeAttachedOp.attachedAsgn		750
nim	attachedDup	ast.html#attachedDup	TTypeAttachedOp.attachedDup		750
nim	attachedSink	ast.html#attachedSink	TTypeAttachedOp.attachedSink		750
nim	attachedTrace	ast.html#attachedTrace	TTypeAttachedOp.attachedTrace		750
nim	attachedDeepCopy	ast.html#attachedDeepCopy	TTypeAttachedOp.attachedDeepCopy		750
nim	TTypeAttachedOp	ast.html#TTypeAttachedOp	enum TTypeAttachedOp		750
nim	TType	ast.html#TType	object TType		759
nim	TPair	ast.html#TPair	object TPair		791
nim	TPairSeq	ast.html#TPairSeq	type TPairSeq		794
nim	TNodePair	ast.html#TNodePair	object TNodePair		796
nim	TNodePairSeq	ast.html#TNodePairSeq	type TNodePairSeq		801
nim	TNodeTable	ast.html#TNodeTable	object TNodeTable		802
nim	TObjectSeq	ast.html#TObjectSeq	type TObjectSeq		807
nim	TObjectSet	ast.html#TObjectSet	object TObjectSet		808
nim	impUnknown	ast.html#impUnknown	TImplication.impUnknown		812
nim	impNo	ast.html#impNo	TImplication.impNo		812
nim	impYes	ast.html#impYes	TImplication.impYes		812
nim	TImplication	ast.html#TImplication	enum TImplication		812
nim	typ	ast.html#typ.t,PNode	template typ(n: PNode): PType		817
nim	owner	ast.html#owner	proc owner(s: PSym | PType): PSym		820
nim	setOwner	ast.html#setOwner,,PSym	proc setOwner(s: PSym | PType; owner: PSym)		823
nim	setUseIc	ast.html#setUseIc,bool	proc setUseIc(useIc: bool)		834
nim	comment	ast.html#comment,PNode	proc comment(n: PNode): string		836
nim	comment=	ast.html#comment=,PNode,string	proc comment=(n: PNode; a: string)		843
nim	OverloadableSyms	ast.html#OverloadableSyms	const OverloadableSyms		863
nim	GenericTypes	ast.html#GenericTypes	const GenericTypes		866
nim	StructuralEquivTypes	ast.html#StructuralEquivTypes	const StructuralEquivTypes		869
nim	ConcreteTypes	ast.html#ConcreteTypes	const ConcreteTypes		873
nim	IntegralTypes	ast.html#IntegralTypes	const IntegralTypes		880
nim	ConstantDataTypes	ast.html#ConstantDataTypes	const ConstantDataTypes		882
nim	NilableTypes	ast.html#NilableTypes	const NilableTypes		884
nim	PtrLikeKinds	ast.html#PtrLikeKinds	const PtrLikeKinds		886
nim	PersistentNodeFlags	ast.html#PersistentNodeFlags	const PersistentNodeFlags		887
nim	namePos	ast.html#namePos	const namePos		894
nim	patternPos	ast.html#patternPos	const patternPos		895
nim	genericParamsPos	ast.html#genericParamsPos	const genericParamsPos		896
nim	paramsPos	ast.html#paramsPos	const paramsPos		897
nim	pragmasPos	ast.html#pragmasPos	const pragmasPos		898
nim	miscPos	ast.html#miscPos	const miscPos		899
nim	bodyPos	ast.html#bodyPos	const bodyPos		900
nim	resultPos	ast.html#resultPos	const resultPos		901
nim	dispatcherPos	ast.html#dispatcherPos	const dispatcherPos		902
nim	nfAllFieldsSet	ast.html#nfAllFieldsSet	const nfAllFieldsSet		904
nim	nkIdentKinds	ast.html#nkIdentKinds	const nkIdentKinds		906
nim	nkPragmaCallKinds	ast.html#nkPragmaCallKinds	const nkPragmaCallKinds		909
nim	nkLiterals	ast.html#nkLiterals	const nkLiterals		910
nim	nkFloatLiterals	ast.html#nkFloatLiterals	const nkFloatLiterals		911
nim	nkLambdaKinds	ast.html#nkLambdaKinds	const nkLambdaKinds		912
nim	declarativeDefs	ast.html#declarativeDefs	const declarativeDefs		913
nim	routineDefs	ast.html#routineDefs	const routineDefs		914
nim	procDefs	ast.html#procDefs	const procDefs		915
nim	callableDefs	ast.html#callableDefs	const callableDefs		916
nim	nkSymChoices	ast.html#nkSymChoices	const nkSymChoices		918
nim	nkStrKinds	ast.html#nkStrKinds	const nkStrKinds		919
nim	skLocalVars	ast.html#skLocalVars	const skLocalVars		921
nim	skProcKinds	ast.html#skProcKinds	const skProcKinds		922
nim	defaultOffset	ast.html#defaultOffset	const defaultOffset		927
nim	getPIdent	ast.html#getPIdent,PNode	proc getPIdent(a: PNode): PIdent		929
nim	id	ast.html#id.t	template id(a: PType | PSym): int		941
nim	IdGenerator	ast.html#IdGenerator	type IdGenerator		946
nim	PackageModuleId	ast.html#PackageModuleId	const PackageModuleId		954
nim	idGeneratorFromModule	ast.html#idGeneratorFromModule,PSym	proc idGeneratorFromModule(m: PSym): IdGenerator		956
nim	idGeneratorForPackage	ast.html#idGeneratorForPackage,int32	proc idGeneratorForPackage(nextIdWillBe: int32): IdGenerator		960
nim	nextTypeId	ast.html#nextTypeId,IdGenerator	proc nextTypeId(x: IdGenerator): ItemId		968
nim	ggDebug	ast.html#ggDebug	var ggDebug		986
nim	isCallExpr	ast.html#isCallExpr,PNode	proc isCallExpr(n: PNode): bool		988
nim	discardSons	ast.html#discardSons,PNode	proc discardSons(father: PNode)		991
nim	len	ast.html#len,PNode	proc len(n: PNode): int		993
nim	safeLen	ast.html#safeLen,PNode	proc safeLen(n: PNode): int		996
nim	safeArrLen	ast.html#safeArrLen,PNode	proc safeArrLen(n: PNode): int		1001
nim	add	ast.html#add,PNode,PNode	proc add(father, son: PNode)		1007
nim	addAllowNil	ast.html#addAllowNil,PNode,PNode	proc addAllowNil(father, son: PNode)		1011
nim	`[]`	ast.html#[].t,PNode,int	template `[]`(n: PNode; i: int): PNode		1014
nim	`[]=`	ast.html#[]=.t,PNode,int,PNode	template `[]=`(n: PNode; i: int; x: PNode)		1015
nim	`[]`	ast.html#[].t,PNode,BackwardsIndex	template `[]`(n: PNode; i: BackwardsIndex): PNode		1017
nim	`[]=`	ast.html#[]=.t,PNode,BackwardsIndex,PNode	template `[]=`(n: PNode; i: BackwardsIndex; x: PNode)		1018
nim	add	ast.html#add,PType,PType	proc add(father, son: PType)		1020
nim	addAllowNil	ast.html#addAllowNil,PType,PType	proc addAllowNil(father, son: PType)		1024
nim	`[]`	ast.html#[].t,PType,int	template `[]`(n: PType; i: int): PType		1027
nim	`[]=`	ast.html#[]=.t,PType,int,PType	template `[]=`(n: PType; i: int; x: PType)		1028
nim	`[]`	ast.html#[].t,PType,BackwardsIndex	template `[]`(n: PType; i: BackwardsIndex): PType		1030
nim	`[]=`	ast.html#[]=.t,PType,BackwardsIndex,PType	template `[]=`(n: PType; i: BackwardsIndex; x: PType)		1031
nim	getDeclPragma	ast.html#getDeclPragma,PNode	proc getDeclPragma(n: PNode): PNode		1033
nim	extractPragma	ast.html#extractPragma,PSym	proc extractPragma(s: PSym): PNode		1067
nim	skipPragmaExpr	ast.html#skipPragmaExpr,PNode	proc skipPragmaExpr(n: PNode): PNode		1087
nim	setInfoRecursive	ast.html#setInfoRecursive,PNode,TLineInfo	proc setInfoRecursive(n: PNode; info: TLineInfo)		1095
nim	newNode	ast.html#newNode,TNodeKind	proc newNode(kind: TNodeKind): PNode		1123
nim	newNodeI	ast.html#newNodeI,TNodeKind,TLineInfo	proc newNodeI(kind: TNodeKind; info: TLineInfo): PNode		1128
nim	newNodeI	ast.html#newNodeI,TNodeKind,TLineInfo,int	proc newNodeI(kind: TNodeKind; info: TLineInfo; children: int): PNode		1133
nim	newNodeIT	ast.html#newNodeIT,TNodeKind,TLineInfo,PType	proc newNodeIT(kind: TNodeKind; info: TLineInfo; typ: PType): PNode		1140
nim	newNode	ast.html#newNode,TNodeKind,TLineInfo	proc newNode(kind: TNodeKind; info: TLineInfo): PNode		1146
nim	newAtom	ast.html#newAtom,PIdent,TLineInfo	proc newAtom(ident: PIdent; info: TLineInfo): PNode		1151
nim	newAtom	ast.html#newAtom,TNodeKind,BiggestInt,TLineInfo	proc newAtom(kind: TNodeKind; intVal: BiggestInt; info: TLineInfo): PNode		1155
nim	newAtom	ast.html#newAtom,TNodeKind,BiggestFloat,TLineInfo	proc newAtom(kind: TNodeKind; floatVal: BiggestFloat; info: TLineInfo): PNode		1159
nim	newAtom	ast.html#newAtom,TNodeKind,sinkstring,TLineInfo	proc newAtom(kind: TNodeKind; strVal: sink string; info: TLineInfo): PNode		1163
nim	newTree	ast.html#newTree,TNodeKind,TLineInfo,varargs[PNode]	proc newTree(kind: TNodeKind; info: TLineInfo; children: varargs[PNode]): PNode		1167
nim	newTree	ast.html#newTree,TNodeKind,varargs[PNode]	proc newTree(kind: TNodeKind; children: varargs[PNode]): PNode		1173
nim	newTreeI	ast.html#newTreeI,TNodeKind,TLineInfo,varargs[PNode]	proc newTreeI(kind: TNodeKind; info: TLineInfo; children: varargs[PNode]): PNode		1179
nim	newTreeIT	ast.html#newTreeIT,TNodeKind,TLineInfo,PType,varargs[PNode]	proc newTreeIT(kind: TNodeKind; info: TLineInfo; typ: PType; children: varargs[PNode]): PNode		1185
nim	previouslyInferred	ast.html#previouslyInferred.t,PType	template previouslyInferred(t: PType): PType		1191
nim	newSym	ast.html#newSym,TSymKind,PIdent,IdGenerator,PSym,TLineInfo,TOptions	proc newSym(symKind: TSymKind; name: PIdent; idgen: IdGenerator; owner: PSym;\n       info: TLineInfo; options: TOptions = {}): PSym		1203
nim	astdef	ast.html#astdef,PSym	proc astdef(s: PSym): PNode		1218
nim	isMetaType	ast.html#isMetaType,PType	proc isMetaType(t: PType): bool		1225
nim	isUnresolvedStatic	ast.html#isUnresolvedStatic,PType	proc isUnresolvedStatic(t: PType): bool		1230
nim	linkTo	ast.html#linkTo,PType,PSym	proc linkTo(t: PType; s: PSym): PType		1233
nim	linkTo	ast.html#linkTo,PSym,PType	proc linkTo(s: PSym; t: PType): PSym		1238
nim	fileIdx	ast.html#fileIdx.t,PSym	template fileIdx(c: PSym): FileIndex		1243
nim	filename	ast.html#filename.t,PSym	template filename(c: PSym): string		1247
nim	appendToModule	ast.html#appendToModule,PSym,PNode	proc appendToModule(m: PSym; n: PNode)		1251
nim	GrowthFactor	ast.html#GrowthFactor	const GrowthFactor		1262
nim	StartSize	ast.html#StartSize	const StartSize		1263
nim	copyStrTable	ast.html#copyStrTable,TStrTable,TStrTable	proc copyStrTable(dest: var TStrTable; src: TStrTable)		1265
nim	copyObjectSet	ast.html#copyObjectSet,TObjectSet,TObjectSet	proc copyObjectSet(dest: var TObjectSet; src: TObjectSet)		1270
nim	withInfo	ast.html#withInfo,PNode,TLineInfo	proc withInfo(n: PNode; info: TLineInfo): PNode		1278
nim	newIdentNode	ast.html#newIdentNode,PIdent,TLineInfo	proc newIdentNode(ident: PIdent; info: TLineInfo): PNode		1282
nim	newSymNode	ast.html#newSymNode,PSym	proc newSymNode(sym: PSym): PNode		1287
nim	newSymNode	ast.html#newSymNode,PSym,TLineInfo	proc newSymNode(sym: PSym; info: TLineInfo): PNode		1293
nim	newOpenSym	ast.html#newOpenSym,PNode	proc newOpenSym(n: PNode): PNode		1299
nim	newIntNode	ast.html#newIntNode,TNodeKind,BiggestInt	proc newIntNode(kind: TNodeKind; intVal: BiggestInt): PNode		1302
nim	newIntNode	ast.html#newIntNode,TNodeKind,Int128	proc newIntNode(kind: TNodeKind; intVal: Int128): PNode		1306
nim	lastSon	ast.html#lastSon,PNode	proc lastSon(n: PNode): PNode		1310
nim	setLastSon	ast.html#setLastSon.t,PNode,PNode	template setLastSon(n: PNode; s: PNode)		1311
nim	firstSon	ast.html#firstSon.t,PNode	template firstSon(n: PNode): PNode		1313
nim	secondSon	ast.html#secondSon.t,PNode	template secondSon(n: PNode): PNode		1314
nim	hasSon	ast.html#hasSon.t,PNode	template hasSon(n: PNode): bool		1316
nim	has2Sons	ast.html#has2Sons.t,PNode	template has2Sons(n: PNode): bool		1317
nim	replaceFirstSon	ast.html#replaceFirstSon,PNode,PNode	proc replaceFirstSon(n, newson: PNode)		1319
nim	replaceSon	ast.html#replaceSon,PNode,int,PNode	proc replaceSon(n: PNode; i: int; newson: PNode)		1322
nim	last	ast.html#last,PType	proc last(n: PType): PType		1325
nim	elementType	ast.html#elementType,PType	proc elementType(n: PType): PType		1327
nim	skipModifier	ast.html#skipModifier,PType	proc skipModifier(n: PType): PType		1328
nim	indexType	ast.html#indexType,PType	proc indexType(n: PType): PType		1330
nim	baseClass	ast.html#baseClass,PType	proc baseClass(n: PType): PType		1331
nim	base	ast.html#base,PType	proc base(t: PType): PType		1333
nim	returnType	ast.html#returnType,PType	proc returnType(n: PType): PType		1336
nim	setReturnType	ast.html#setReturnType,PType,PType	proc setReturnType(n, r: PType)		1337
nim	setIndexType	ast.html#setIndexType,PType,PType	proc setIndexType(n, idx: PType)		1338
nim	firstParamType	ast.html#firstParamType,PType	proc firstParamType(n: PType): PType		1340
nim	firstGenericParam	ast.html#firstGenericParam,PType	proc firstGenericParam(n: PType): PType		1341
nim	typeBodyImpl	ast.html#typeBodyImpl,PType	proc typeBodyImpl(n: PType): PType		1343
nim	genericHead	ast.html#genericHead,PType	proc genericHead(n: PType): PType		1345
nim	skipTypes	ast.html#skipTypes,PType,TTypeKinds	proc skipTypes(t: PType; kinds: TTypeKinds): PType		1347
nim	newIntTypeNode	ast.html#newIntTypeNode,BiggestInt,PType	proc newIntTypeNode(intVal: BiggestInt; typ: PType): PNode		1355
nim	newIntTypeNode	ast.html#newIntTypeNode,Int128,PType	proc newIntTypeNode(intVal: Int128; typ: PType): PNode		1378
nim	newFloatNode	ast.html#newFloatNode,TNodeKind,BiggestFloat	proc newFloatNode(kind: TNodeKind; floatVal: BiggestFloat): PNode		1382
nim	newStrNode	ast.html#newStrNode,TNodeKind,string	proc newStrNode(kind: TNodeKind; strVal: string): PNode		1386
nim	newStrNode	ast.html#newStrNode,string,TLineInfo	proc newStrNode(strVal: string; info: TLineInfo): PNode		1390
nim	newProcNode	ast.html#newProcNode,TNodeKind,TLineInfo,PNode,PNode,PNode,PNode,PNode,PNode,PNode	proc newProcNode(kind: TNodeKind; info: TLineInfo; body: PNode;\n            params, name, pattern, genericParams, pragmas, exceptions: PNode): PNode		1394
nim	AttachedOpToStr	ast.html#AttachedOpToStr	const AttachedOpToStr		1403
nim	`$`	ast.html#$,PSym	proc `$`(s: PSym): string		1406
nim	len	ast.html#len,PType	proc len(n: PType): int		1420
nim	sameTupleLengths	ast.html#sameTupleLengths,PType,PType	proc sameTupleLengths(a, b: PType): bool		1423
nim	tupleTypePairs	ast.html#tupleTypePairs.i,PType,PType	iterator tupleTypePairs(a, b: PType): (int, PType, PType)		1426
nim	underspecifiedPairs	ast.html#underspecifiedPairs.i,PType,PType,int,int	iterator underspecifiedPairs(a, b: PType; start = 0; without = 0): (PType, PType)		1430
nim	signatureLen	ast.html#signatureLen,PType	proc signatureLen(t: PType): int		1435
nim	paramsLen	ast.html#paramsLen,PType	proc paramsLen(t: PType): int		1438
nim	genericParamsLen	ast.html#genericParamsLen,PType	proc genericParamsLen(t: PType): int		1441
nim	genericInvocationParamsLen	ast.html#genericInvocationParamsLen,PType	proc genericInvocationParamsLen(t: PType): int		1445
nim	kidsLen	ast.html#kidsLen,PType	proc kidsLen(t: PType): int		1449
nim	genericParamHasConstraints	ast.html#genericParamHasConstraints,PType	proc genericParamHasConstraints(t: PType): bool		1452
nim	hasElementType	ast.html#hasElementType,PType	proc hasElementType(t: PType): bool		1454
nim	isEmptyTupleType	ast.html#isEmptyTupleType,PType	proc isEmptyTupleType(t: PType): bool		1455
nim	isSingletonTupleType	ast.html#isSingletonTupleType,PType	proc isSingletonTupleType(t: PType): bool		1456
nim	genericConstraint	ast.html#genericConstraint,PType	proc genericConstraint(t: PType): PType		1458
nim	genericInstParams	ast.html#genericInstParams.i,PType	iterator genericInstParams(t: PType): (bool, PType)		1460
nim	genericInstParamPairs	ast.html#genericInstParamPairs.i,PType,PType	iterator genericInstParamPairs(a, b: PType): (int, PType, PType)		1464
nim	genericInvocationParams	ast.html#genericInvocationParams.i,PType	iterator genericInvocationParams(t: PType): (bool, PType)		1468
nim	genericInvocationAndBodyElements	ast.html#genericInvocationAndBodyElements.i,PType,PType	iterator genericInvocationAndBodyElements(a, b: PType): (PType, PType)		1472
nim	genericInvocationParamPairs	ast.html#genericInvocationParamPairs.i,PType,PType	iterator genericInvocationParamPairs(a, b: PType): (bool, PType, PType)		1476
nim	genericBodyParams	ast.html#genericBodyParams.i,PType	iterator genericBodyParams(t: PType): (int, PType)		1483
nim	userTypeClassInstParams	ast.html#userTypeClassInstParams.i,PType	iterator userTypeClassInstParams(t: PType): (bool, PType)		1487
nim	ikids	ast.html#ikids.i,PType	iterator ikids(t: PType): (int, PType)		1491
nim	FirstParamAt	ast.html#FirstParamAt	const FirstParamAt		1495
nim	FirstGenericParamAt	ast.html#FirstGenericParamAt	const FirstGenericParamAt		1496
nim	paramTypes	ast.html#paramTypes.i,PType	iterator paramTypes(t: PType): (int, PType)		1498
nim	paramTypePairs	ast.html#paramTypePairs.i,PType,PType	iterator paramTypePairs(a, b: PType): (PType, PType)		1501
nim	paramTypeToNodeIndex	ast.html#paramTypeToNodeIndex.t,int	template paramTypeToNodeIndex(x: int): int		1504
nim	kids	ast.html#kids.i,PType	iterator kids(t: PType): PType		1506
nim	signature	ast.html#signature.i,PType	iterator signature(t: PType): PType		1509
nim	newType	ast.html#newType,TTypeKind,IdGenerator,PSym,sinkPType	proc newType(kind: TTypeKind; idgen: IdGenerator; owner: PSym; son: sink PType = nil): PType		1513
nim	setSons	ast.html#setSons,PType,sinkseq[PType]	proc setSons(dest: PType; sons: sink seq[PType])		1524
nim	setSon	ast.html#setSon,PType,sinkPType	proc setSon(dest: PType; son: sink PType)		1525
nim	setSonsLen	ast.html#setSonsLen,PType,int	proc setSonsLen(dest: PType; len: int)		1526
nim	newSons	ast.html#newSons,PNode,int	proc newSons(father: PNode; length: int)		1535
nim	newSons	ast.html#newSons,PType,int	proc newSons(father: PType; length: int)		1538
nim	truncateInferredTypeCandidates	ast.html#truncateInferredTypeCandidates,PType	proc truncateInferredTypeCandidates(t: PType)		1541
nim	assignType	ast.html#assignType,PType,PType	proc assignType(dest, src: PType)		1546
nim	copyType	ast.html#copyType,PType,IdGenerator,PSym	proc copyType(t: PType; idgen: IdGenerator; owner: PSym): PType		1564
nim	exactReplica	ast.html#exactReplica,PType	proc exactReplica(t: PType): PType		1569
nim	copySym	ast.html#copySym,PSym,IdGenerator	proc copySym(s: PSym; idgen: IdGenerator): PSym		1576
nim	createModuleAlias	ast.html#createModuleAlias,PSym,IdGenerator,PIdent,TLineInfo,TOptions	proc createModuleAlias(s: PSym; idgen: IdGenerator; newIdent: PIdent;\n                  info: TLineInfo; options: TOptions): PSym		1592
nim	initStrTable	ast.html#initStrTable	proc initStrTable(): TStrTable		1604
nim	initObjectSet	ast.html#initObjectSet	proc initObjectSet(): TObjectSet		1608
nim	initNodeTable	ast.html#initNodeTable	proc initNodeTable(): TNodeTable		1612
nim	skipTypes	ast.html#skipTypes,PType,TTypeKinds,int	proc skipTypes(t: PType; kinds: TTypeKinds; maxIters: int): PType		1616
nim	skipTypesOrNil	ast.html#skipTypesOrNil,PType,TTypeKinds	proc skipTypesOrNil(t: PType; kinds: TTypeKinds): PType		1624
nim	isGCedMem	ast.html#isGCedMem,PType	proc isGCedMem(t: PType): bool		1631
nim	propagateToOwner	ast.html#propagateToOwner,PType,PType	proc propagateToOwner(owner, elem: PType; propagateHasAsgn = true)		1635
nim	rawAddSon	ast.html#rawAddSon,PType,PType	proc rawAddSon(father, son: PType; propagateHasAsgn = true)		1660
nim	addSonNilAllowed	ast.html#addSonNilAllowed,PNode,PNode	proc addSonNilAllowed(father, son: PNode)		1664
nim	delSon	ast.html#delSon,PNode,int	proc delSon(father: PNode; idx: int)		1667
nim	copyNode	ast.html#copyNode,PNode	proc copyNode(src: PNode): PNode		1672
nim	transitionSonsKind	ast.html#transitionSonsKind,PNode,range[]	proc transitionSonsKind(n: PNode; kind: range[nkComesFrom .. nkTupleConstr])		1701
nim	transitionIntKind	ast.html#transitionIntKind,PNode,range[]	proc transitionIntKind(n: PNode; kind: range[nkCharLit .. nkUInt64Lit])		1705
nim	transitionIntToFloatKind	ast.html#transitionIntToFloatKind,PNode,range[]	proc transitionIntToFloatKind(n: PNode; kind: range[nkFloatLit .. nkFloat128Lit])		1709
nim	transitionNoneToSym	ast.html#transitionNoneToSym,PNode	proc transitionNoneToSym(n: PNode)		1713
nim	transitionSymKindCommon	ast.html#transitionSymKindCommon.t,TSymKind	template transitionSymKindCommon(k: TSymKind)		1716
nim	transitionGenericParamToType	ast.html#transitionGenericParamToType,PSym	proc transitionGenericParamToType(s: PSym)		1727
nim	transitionRoutineSymKind	ast.html#transitionRoutineSymKind,PSym,range[]	proc transitionRoutineSymKind(s: PSym; kind: range[skProc .. skTemplate])		1730
nim	transitionToLet	ast.html#transitionToLet,PSym	proc transitionToLet(s: PSym)		1735
nim	shallowCopy	ast.html#shallowCopy,PNode	proc shallowCopy(src: PNode): PNode		1761
nim	copyTree	ast.html#copyTree,PNode	proc copyTree(src: PNode): PNode		1766
nim	copyTreeWithoutNode	ast.html#copyTreeWithoutNode,PNode,PNode	proc copyTreeWithoutNode(src, skippedNode: PNode): PNode		1773
nim	hasSonWith	ast.html#hasSonWith,PNode,TNodeKind	proc hasSonWith(n: PNode; kind: TNodeKind): bool		1780
nim	hasNilSon	ast.html#hasNilSon,PNode	proc hasNilSon(n: PNode): bool		1786
nim	containsNode	ast.html#containsNode,PNode,TNodeKinds	proc containsNode(n: PNode; kinds: TNodeKinds): bool		1794
nim	hasSubnodeWith	ast.html#hasSubnodeWith,PNode,TNodeKind	proc hasSubnodeWith(n: PNode; kind: TNodeKind): bool		1803
nim	getInt	ast.html#getInt,PNode	proc getInt(a: PNode): Int128		1812
nim	getInt64	ast.html#getInt64,PNode	proc getInt64(a: PNode): int64		1825
nim	getFloat	ast.html#getFloat,PNode	proc getFloat(a: PNode): BiggestFloat		1832
nim	getStr	ast.html#getStr,PNode	proc getStr(a: PNode): string		1843
nim	getStrOrChar	ast.html#getStrOrChar,PNode	proc getStrOrChar(a: PNode): string		1855
nim	isGenericParams	ast.html#isGenericParams,PNode	proc isGenericParams(n: PNode): bool		1865
nim	isGenericRoutine	ast.html#isGenericRoutine,PNode	proc isGenericRoutine(n: PNode): bool		1869
nim	isGenericRoutineStrict	ast.html#isGenericRoutineStrict,PSym	proc isGenericRoutineStrict(s: PSym): bool		1872
nim	isGenericRoutine	ast.html#isGenericRoutine,PSym	proc isGenericRoutine(s: PSym): bool		1878
nim	skipGenericOwner	ast.html#skipGenericOwner,PSym	proc skipGenericOwner(s: PSym): PSym		1892
nim	originatingModule	ast.html#originatingModule,PSym	proc originatingModule(s: PSym): PSym		1903
nim	isRoutine	ast.html#isRoutine,PSym	proc isRoutine(s: PSym): bool		1907
nim	isCompileTimeProc	ast.html#isCompileTimeProc,PSym	proc isCompileTimeProc(s: PSym): bool		1910
nim	hasPattern	ast.html#hasPattern,PSym	proc hasPattern(s: PSym): bool		1914
nim	items	ast.html#items.i,PNode	iterator items(n: PNode): PNode		1917
nim	pairs	ast.html#pairs.i,PNode	iterator pairs(n: PNode): tuple[i: int, n: PNode]		1920
nim	isAtom	ast.html#isAtom,PNode	proc isAtom(n: PNode): bool		1923
nim	isEmptyType	ast.html#isEmptyType,PType	proc isEmptyType(t: PType): bool		1926
nim	makeStmtList	ast.html#makeStmtList,PNode	proc makeStmtList(n: PNode): PNode		1930
nim	skipStmtList	ast.html#skipStmtList,PNode	proc skipStmtList(n: PNode): PNode		1937
nim	toVar	ast.html#toVar,PType,TTypeKind,IdGenerator	proc toVar(typ: PType; kind: TTypeKind; idgen: IdGenerator): PType		1945
nim	toRef	ast.html#toRef,PType,IdGenerator	proc toRef(typ: PType; idgen: IdGenerator): PType		1952
nim	toObject	ast.html#toObject,PType	proc toObject(typ: PType): PType		1959
nim	toObjectFromRefPtrGeneric	ast.html#toObjectFromRefPtrGeneric,PType	proc toObjectFromRefPtrGeneric(typ: PType): PType		1967
nim	isImportedException	ast.html#isImportedException,PType,ConfigRef	proc isImportedException(t: PType; conf: ConfigRef): bool		1987
nim	isInfixAs	ast.html#isInfixAs,PNode	proc isInfixAs(n: PNode): bool		1996
nim	skipColon	ast.html#skipColon,PNode	proc skipColon(n: PNode): PNode		1999
nim	findUnresolvedStatic	ast.html#findUnresolvedStatic,PNode	proc findUnresolvedStatic(n: PNode): PNode		2004
nim	hasDestructor	ast.html#hasDestructor.t,PType	template hasDestructor(t: PType): bool		2025
nim	incompleteType	ast.html#incompleteType.t,PType	template incompleteType(t: PType): bool		2027
nim	typeCompleted	ast.html#typeCompleted.t,PSym	template typeCompleted(s: PSym)		2030
nim	detailedInfo	ast.html#detailedInfo.t,PSym	template detailedInfo(sym: PSym): string		2033
nim	isInlineIterator	ast.html#isInlineIterator,PType	proc isInlineIterator(typ: PType): bool		2036
nim	isIterator	ast.html#isIterator,PType	proc isIterator(typ: PType): bool		2039
nim	isClosureIterator	ast.html#isClosureIterator,PType	proc isClosureIterator(typ: PType): bool		2042
nim	isClosure	ast.html#isClosure,PType	proc isClosure(typ: PType): bool		2045
nim	isNimcall	ast.html#isNimcall,PSym	proc isNimcall(s: PSym): bool		2048
nim	isExplicitCallConv	ast.html#isExplicitCallConv,PSym	proc isExplicitCallConv(s: PSym): bool		2051
nim	isSinkParam	ast.html#isSinkParam,PSym	proc isSinkParam(s: PSym): bool		2054
nim	isSinkType	ast.html#isSinkType,PType	proc isSinkType(t: PType): bool		2057
nim	newProcType	ast.html#newProcType,TLineInfo,IdGenerator,PSym	proc newProcType(info: TLineInfo; idgen: IdGenerator; owner: PSym): PType		2060
nim	addParam	ast.html#addParam,PType,PSym	proc addParam(procType: PType; param: PSym)		2069
nim	canRaiseConservative	ast.html#canRaiseConservative,PNode	proc canRaiseConservative(fn: PNode): bool		2077
nim	canRaise	ast.html#canRaise,PNode	proc canRaise(fn: PNode): bool		2083
nim	toHumanStr	ast.html#toHumanStr,TSymKind	proc toHumanStr(kind: TSymKind): string		2104
nim	toHumanStr	ast.html#toHumanStr,TTypeKind	proc toHumanStr(kind: TTypeKind): string		2108
nim	skipHiddenAddr	ast.html#skipHiddenAddr,PNode	proc skipHiddenAddr(n: PNode): PNode		2112
nim	isNewStyleConcept	ast.html#isNewStyleConcept,PNode	proc isNewStyleConcept(n: PNode): bool		2115
nim	isOutParam	ast.html#isOutParam,PType	proc isOutParam(t: PType): bool		2119
nim	nodesToIgnoreSet	ast.html#nodesToIgnoreSet	const nodesToIgnoreSet		2122
nim	isTrue	ast.html#isTrue,PNode	proc isTrue(n: PNode): bool		2129
nim	TypeMapping	ast.html#TypeMapping	type TypeMapping		2134
nim	SymMapping	ast.html#SymMapping	type SymMapping		2135
nim	idTableGet	ast.html#idTableGet.t,typed,	template idTableGet(tab: typed; key: PSym | PType): untyped		2137
nim	idTablePut	ast.html#idTablePut.t,typed,,	template idTablePut(tab: typed; key, val: PSym | PType)		2138
nim	initSymMapping	ast.html#initSymMapping.t	template initSymMapping(): Table[ItemId, PSym]		2140
nim	initTypeMapping	ast.html#initTypeMapping.t	template initTypeMapping(): Table[ItemId, PType]		2141
nim	resetIdTable	ast.html#resetIdTable.t,Table[ItemId,PSym]	template resetIdTable(tab: Table[ItemId, PSym])		2143
nim	resetIdTable	ast.html#resetIdTable.t,Table[ItemId,PType]	template resetIdTable(tab: Table[ItemId, PType])		2144
nimgrp	newnodei	ast.html#newNodeI-procs-all	proc		1128
nimgrp	newstrnode	ast.html#newStrNode-procs-all	proc		1386
nimgrp	addallownil	ast.html#addAllowNil-procs-all	proc		1011
nimgrp	isgenericroutine	ast.html#isGenericRoutine-procs-all	proc		1869
nimgrp	newnode	ast.html#newNode-procs-all	proc		1123
nimgrp	newsons	ast.html#newSons-procs-all	proc		1535
nimgrp	newsymnode	ast.html#newSymNode-procs-all	proc		1287
nimgrp	newintnode	ast.html#newIntNode-procs-all	proc		1302
nimgrp	newinttypenode	ast.html#newIntTypeNode-procs-all	proc		1355
nimgrp	skiptypes	ast.html#skipTypes-procs-all	proc		1347
nimgrp	len	ast.html#len-procs-all	proc		993
nimgrp	newtree	ast.html#newTree-procs-all	proc		1167
nimgrp	add	ast.html#add-procs-all	proc		1007
nimgrp	tohumanstr	ast.html#toHumanStr-procs-all	proc		2104
nimgrp	linkto	ast.html#linkTo-procs-all	proc		1233
nimgrp	$	ast.html#$-procs-all	proc		574
nimgrp	newatom	ast.html#newAtom-procs-all	proc		1151
nimgrp	[]=	ast.html#[]=-templates-all	template		1015
nimgrp	[]	ast.html#[]-templates-all	template		1014
nimgrp	resetidtable	ast.html#resetIdTable-templates-all	template		2143
